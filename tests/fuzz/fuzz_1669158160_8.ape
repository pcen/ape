module foo ;
 var foo int = false * 123 ;
 func foo ( ) int { false ;
 } ;
 func foo ( foo int , foo int , foo int , foo int , foo int . int . int ) int . int . int { if - false - ~ ~ foo ( ! ! ~ true | ~ ~ true , ( ! ~ ~ true ) [ foo ] ) { if false [ ~ ! foo < ! true ] { ! ~ ~ ! foo [ ! ~ "bar" ] ;
 } else { false . foo == - true [ "bar" != "bar" / true ] ;
 } ;
 } else { if true . foo { false ( ) ;
 } else { - - ! - ! ( false < ! ! ! "bar" ) /= foo ;
 } ;
 } ;
 } ;
 class foo { func foo ( foo int ) int . int . int { if ( ( 123 ) [ ~ - ! ! ! - ( - ! ( - - ~ true ) . foo ) ] ) / true { 123 / false ;
 } else { 123 [ true ] ++ ;
 } ;
 } ;
 foo int . int ;
 func foo ( ) int { if ~ false >= ~ true { foo . foo -- ;
 } else { ! - false = ~ ! true & ~ ~ 123 ;
 } ;
 } ;
 } ;
 func foo ( foo int , foo int ) int { ! ~ "bar" == true . foo = foo * - false [ foo ] ^ ! false ;
 } ;
 class foo { foo int ;
 foo int ;
 } ;
 val foo int . int = - foo * ! - true ;
 class foo { func foo ( ) int { true *= - ! false ;
 } ;
 foo int ;
 func foo ( ) int { for val foo int = false ;
 false ;
 ! - foo **= - - ! ! foo { if ( - - ! ! "bar" >= 123 . foo ) { for var foo int = true ;
 "bar" . foo ;
 - "bar" - ~ ( - false ) . foo == ~ "bar" ( ~ ! foo [ ! ~ "bar" . foo ] , true ) -- { for val foo int = ! ~ ! ! ( true ) ;
 "bar" ;
 123 /= - ~ ~ foo != - - - - - "bar" { if true { ! ~ ~ "bar" | true ;
 } else { ! ~ true -= - false ;
 } ;
 } ;
 } ;
 } else { if ~ ! - ~ foo { for val foo int = - "bar" < "bar" [ ~ 123 ] ;
 "bar" ;
 ! - ~ "bar" { for var foo int = "bar" ;
 true ;
 true { if 123 { 123 ++ ;
 } else { ! ( foo ) ;
 } ;
 } ;
 } ;
 } else { for var foo int = ! ~ "bar" ( "bar" * foo , foo + ~ true * ( ! - ~ - foo ) <= ( false ) ) ;
 ~ ! - ~ ~ false . foo / ! false ;
 ( ! ~ ! ! ( ! foo ( ! 123 != "bar" ^ ! true , true . foo ) / ~ ~ ~ ( ( "bar" ) ) + 123 . foo ) ( ) | ( foo . foo ) ) [ "bar" ] ++ { for var foo int = "bar" ;
 ~ false ;
 foo == - ~ ~ - ! ~ - - ~ ~ false -= 123 * 123 ( ) < "bar" . foo == - ! ( - ~ ~ - ! foo . foo < 123 == ( foo | ! ~ foo [ ( - ! - "bar" ) ] * foo ) ( ) ) { for var foo int . int . int = false . foo + ~ ! 123 ;
 ( - false [ foo ] + foo ) [ foo > - true ] == - ~ ! ~ ! - true [ - false ( ( ( ~ false ( ( - ~ ! - ( ~ ~ ! ~ ! ! ( ~ ~ - 123 <= ( - ~ ~ - "bar" * foo ) [ 123 ] ) < ~ foo ) ) . foo , ~ 123 ) & foo ) == foo / ~ 123 ) == true | ! - false , ~ ( false ) [ - true ] ) ] ;
 ( ! 123 ^ ~ ( ! foo ) != ! ! ~ - - - ~ ! ~ true [ ~ "bar" ] & 123 . foo ) { ( - ~ ! - ! "bar" . foo | - true != true ) ;
 } ;
 } ;
 } ;
 } ;
 } ;
 } ;
 } ;
 func foo ( foo int . int , foo int , foo int . int . int , foo int , foo int ) int { if 123 { if ! ( true [ 123 ( - ! ! ( false & "bar" - true ) , 123 ) < - foo ] * ( true ) != 123 [ foo ] ) ( ) { ~ "bar" = ~ ~ "bar" . foo ;
 } else { if ! ! false ( foo , 123 ) == ! ( "bar" ) / false . foo { if ( true . foo & foo > ~ ~ ~ ! foo ) + foo { ~ - 123 > ( "bar" ) /= ~ "bar" < 123 . foo ;
 } else { if - "bar" { foo ;
 } else { 123 [ 123 ] + - false ++ ;
 } ;
 } ;
 } else { - - ~ - ! ! foo & - ~ - ! - 123 += ! - 123 [ foo . foo ] >= "bar" [ "bar" ] ;
 } ;
 } ;
 } else { ~ foo + false ;
 } ;
 } ;
 func foo ( foo int , foo int . int . int ) int . int { ~ ~ "bar" == - ( false ( - ! ( false ( ) ) [ 123 ] , ! ( ! ( ( true . foo - ~ true ) ) ( 123 . foo , true & ! 123 ) ) ^ foo [ ~ ( foo ( ) ) . foo ] ) <= ~ ~ ~ 123 ) -- ;
 } ;
 func foo ( ) int { if false { ~ "bar" ( ) -= foo ;
 } else { if - ( foo >= true ( true , ! - - true ) ) != "bar" & - ! ~ - ! ! ! - - foo ( ) { ~ false += ! - - - "bar" + ~ ! - ! - "bar" ;
 } else { ( "bar" ) [ ! false & foo ] -= foo == - - ! - ~ ( - ~ ~ foo ) ;
 } ;
 } ;
 } ;
 } ;
 func foo ( ) int . int . int { false ( ) ;
 } ;
 func foo ( ) int { - ~ ( "bar" ) ++ ;
 } ;
 class foo { } ;
 func foo ( foo int , foo int . int . int , foo int , foo int , foo int ) int { false . foo /= foo ;
 } ;
 func foo ( ) int . int { foo ;
 } ;
 class foo { func foo ( foo int . int , foo int , foo int , foo int . int . int ) int { false | 123 *= ( - ~ true ) [ false & false + ( ! ~ ! "bar" ) [ 123 / ~ ~ - ! foo + 123 ] ] != false . foo ;
 } ;
 foo int ;
 foo int . int ;
 } ;
 func foo ( ) int { if ! 123 { for var foo int . int = 123 [ ~ foo [ ( - true ( ) <= ! foo ) ^ - true ] ] ;
 foo != ~ - true | true ;
 ! ~ ! 123 . foo + ! - 123 <= false ( "bar" - false , true ) = ! true { foo ;
 } ;
 } else { if "bar" { ! - - foo . foo >= - false ;
 } else { - - ! - true > ! true ;
 } ;
 } ;
 } ;
 
