module foo ;
 class foo { } ;
 class foo { func foo ( foo int , foo int , foo int ) int { if - foo . foo { if - 123 ( ) >= false { - true ^ 123 . foo -- ;
 } else { if ! - ~ - ( false ( - - ! "bar" , ! false ) * ! foo ) > ! false [ ! ! ~ false ( ) == foo ] { if ( ! ! false ) . foo + "bar" [ ~ 123 * 123 . foo == ~ foo / - "bar" > 123 . foo ] & - ( - ~ ! ! - ! - foo ) { if foo { "bar" [ foo | ~ - 123 ] = ~ "bar" / ~ foo [ ! - true ( ) ] ;
 } else { - - - foo != ( foo ( foo . foo / ! - false [ true * 123 == false ] , false ) ) & ! - - foo ++ ;
 } ;
 } else { if 123 { ~ foo ;
 } else { for val foo int = - ~ "bar" ;
 ! ! ( - - foo [ "bar" ( ) > - ~ ! foo ] ) ;
 - - ~ false -- { true ( ) ;
 } ;
 } ;
 } ;
 } else { if ( ( ( ! - foo ) ) . foo ) { true ( ) < foo == ! - true / 123 = true ;
 } else { ~ ( - 123 ) ;
 } ;
 } ;
 } ;
 } else { ~ 123 . foo ++ ;
 } ;
 } ;
 foo int ;
 foo int ;
 foo int . int . int ;
 foo int ;
 func foo ( foo int . int . int ) int { for val foo int . int = ~ "bar" ;
 123 ;
 - true [ "bar" ] -- { false ;
 } ;
 } ;
 func foo ( foo int , foo int , foo int . int . int , foo int , foo int . int ) int { if true ( ) <= foo . foo | ( ( ! ~ false [ "bar" . foo ] ) [ - false ( "bar" , - ~ ~ foo ) ] ) { for val foo int = ! false . foo ;
 true ;
 ~ foo -- { for var foo int = false * 123 . foo ;
 - ~ - ! true ^ false ;
 123 -- { for var foo int . int . int = ~ ! - ! - "bar" [ ~ "bar" ] & 123 ;
 ( - foo ) ( ) ;
 ( 123 ) ( ) * false . foo { 123 == ~ ~ "bar" ++ ;
 } ;
 } ;
 } ;
 } else { if true { ! ~ true /= "bar" ;
 } else { if 123 { 123 ;
 } else { if 123 [ ~ - false ] | - ( ! foo [ ! ! ~ foo ( ) >= 123 ] / ~ ! ( ( ( false ) ) . foo ) ) { - ~ false [ true ] ;
 } else { ~ - true != ~ ~ ! ! ~ foo ( ) /= false [ true ] ;
 } ;
 } ;
 } ;
 } ;
 } ;
 foo int ;
 foo int ;
 foo int ;
 } ;
 val foo int = ~ ! true ;
 class foo { foo int ;
 func foo ( ) int . int . int { foo [ - - ~ - foo ] ++ ;
 } ;
 } ;
 var foo int . int = foo ;
 func foo ( ) int . int { if 123 { for val foo int = foo ;
 true > true * ( "bar" ) ;
 ! ( ! true ) / foo . foo -- { for var foo int = - 123 ;
 123 [ ~ ~ false ] ;
 false [ - 123 >= "bar" ] { "bar" -= ~ "bar" ;
 } ;
 } ;
 } else { for var foo int = ( true ( true , ! 123 [ - ( ! - ~ ! - ! "bar" ) ] > ! - false ) ) ;
 - - ~ ~ 123 ;
 ! ( ! ! "bar" ) -- { foo ;
 } ;
 } ;
 } ;
 var foo int = ~ ( "bar" ) ;
 class foo { } ;
 class foo { func foo ( foo int ) int { if ! foo > ! ! ~ true { - foo ^ false ;
 } else { for var foo int = - foo ;
 true . foo * false <= - foo + - "bar" ;
 ~ foo . foo <= 123 . foo { ! "bar" [ ~ ( false ) ^ 123 >= ~ false != ! true ] ;
 } ;
 } ;
 } ;
 } ;
 func foo ( ) int . int . int { - - ~ - 123 * ! 123 | ~ "bar" /= ! - ( ! ~ 123 ) ( foo [ - foo [ false ] >= ! foo ] != - ~ - - - ! 123 <= ( foo ) ( - ! true , true * false [ ! ( 123 . foo - false ) ] ) , false ) ;
 } ;
 class foo { func foo ( foo int , foo int , foo int , foo int , foo int . int , foo int ) int { if ~ - - ! - ( ! - ~ foo ) | 123 / foo { ! "bar" ;
 } else { true . foo -= false == - true ;
 } ;
 } ;
 } ;
 var foo int = ! ! false ;
 func foo ( foo int , foo int , foo int . int ) int { if ! ! ~ - foo { if ! false { ~ false -- ;
 } else { for val foo int = 123 [ ~ ~ 123 . foo & ! foo ] & - 123 - 123 [ - ~ ( true ) <= false ] ;
 ! 123 != ~ ~ ~ "bar" ;
 123 -- { for var foo int . int = - - ! ! - ( - ( - ~ 123 ) ) ;
 "bar" + ~ ~ false [ 123 > false . foo ] ;
 ~ true * "bar" [ "bar" ] ++ { - ! ! false -- ;
 } ;
 } ;
 } ;
 } else { ! ! ( false < "bar" ) -- ;
 } ;
 } ;
 var foo int = ~ ~ "bar" [ 123 ] > - ! ! false . foo ;
 func foo ( ) int { true ( - ~ "bar" [ - false ( ~ ~ "bar" - - ! 123 , ! - true ( foo , foo ) <= true == false ) ] + ! ! - true * ! 123 ( 123 [ - foo ( true ( ~ 123 >= "bar" , 123 ) , foo [ - 123 ] ) ] >= ! "bar" , foo ) , ! true ) ;
 } ;
 var foo int . int = - true ;
 class foo { foo int ;
 func foo ( ) int { true . foo ;
 } ;
 foo int ;
 foo int ;
 func foo ( foo int , foo int . int . int , foo int . int . int , foo int . int , foo int ) int . int { ~ 123 ++ ;
 } ;
 foo int . int ;
 foo int ;
 func foo ( foo int . int . int , foo int , foo int , foo int , foo int . int . int ) int { 123 ;
 } ;
 func foo ( ) int { false [ ~ ! ( ~ false ) [ "bar" ] ] *= - 123 > ( false . foo ) ( ) ;
 } ;
 } ;
 class foo { func foo ( ) int { for val foo int = foo ;
 "bar" ;
 false . foo / 123 [ ! - "bar" ] { for val foo int . int . int = ! ( ! foo . foo ) ;
 ! foo . foo ;
 - ( "bar" . foo ) + false != ( 123 ) -- { true ;
 } ;
 } ;
 } ;
 foo int ;
 foo int ;
 func foo ( foo int , foo int ) int . int . int { for val foo int = ! ( ~ ~ foo ) - foo ;
 "bar" ( ) ;
 ( - - ! - false ) *= false * - ! ! ( ~ 123 [ - foo ] + 123 >= foo ) { if ~ ~ ~ 123 > ! 123 { if - ~ false ( ) { - false | 123 < ~ ! "bar" + "bar" -- ;
 } else { ( ( ~ ! - true [ 123 ( false , foo . foo == true < ! ! ~ - ~ foo ) ] - - true ) == 123 ) = true ( "bar" , ~ foo ) * ~ 123 == foo ;
 } ;
 } else { ~ 123 > foo [ foo ] **= ! ! false < - "bar" ;
 } ;
 } ;
 } ;
 foo int ;
 func foo ( foo int , foo int , foo int . int . int ) int . int . int { foo [ ~ 123 ] -= ~ ( "bar" [ - ~ 123 | - true ] > ~ - "bar" ) ( ~ ~ ( "bar" ) , "bar" . foo ) ;
 } ;
 foo int ;
 func foo ( foo int , foo int , foo int , foo int ) int { ~ true ++ ;
 } ;
 func foo ( foo int . int . int ) int { - ! ! - true + "bar" ;
 } ;
 } ;
 val foo int = ! true ( ) ;
 class foo { func foo ( foo int , foo int , foo int . int . int ) int { ! ~ foo /= foo ( ~ false , - foo ) & ( "bar" [ foo ] ) ( ) ;
 } ;
 foo int . int . int ;
 foo int ;
 func foo ( foo int . int . int , foo int . int . int , foo int , foo int , foo int ) int { ! false ;
 } ;
 foo int ;
 func foo ( foo int . int ) int { ( "bar" ) ;
 } ;
 foo int ;
 } ;
 func foo ( ) int . int . int { ~ "bar" >= foo *= foo <= "bar" ;
 } ;
 var foo int = ~ "bar" * - ! true ;
 var foo int = - "bar" == - "bar" + ! ~ ! 123 ;
 class foo { func foo ( ) int . int { for var foo int = 123 + ~ foo ( 123 , ! true . foo ) ;
 foo ;
 - ( false . foo != - ~ ! "bar" ) **= 123 { - 123 . foo ++ ;
 } ;
 } ;
 } ;
 class foo { func foo ( foo int , foo int , foo int . int . int ) int . int { for var foo int . int = ! "bar" ;
 false ;
 ~ ! ~ - "bar" -- { for var foo int . int . int = ( true ) != ~ - "bar" ;
 123 ;
 123 -- { if ~ ! "bar" { - false ( false > foo ( ) , ! false ( ) ) / "bar" + - 123 **= - - ( - 123 ^ true ) ( ) ;
 } else { for val foo int = foo . foo ;
 ~ - ! ! "bar" [ ! - - false ] >= ! - ~ true ;
 ~ - true . foo -- { for var foo int = ! ! ! ( ! "bar" & true ( ~ ! ~ ! "bar" | ! - ! 123 , ! foo ) ) ;
 ~ false ;
 123 /= "bar" * - ! ! 123 { - ~ ~ ~ "bar" -- ;
 } ;
 } ;
 } ;
 } ;
 } ;
 } ;
 foo int . int . int ;
 func foo ( foo int , foo int . int . int , foo int ) int . int { false ++ ;
 } ;
 func foo ( ) int { ! - "bar" ++ ;
 } ;
 foo int ;
 } ;
 class foo { foo int . int . int ;
 func foo ( foo int ) int { - ! ( "bar" - ( ~ foo ( - foo . foo / - ( - ~ foo . foo ) , ( ( true + "bar" ) [ "bar" ] ) ) ) ) - - ~ ~ foo ;
 } ;
 func foo ( foo int , foo int ) int { for var foo int = ~ ~ 123 ;
 false ;
 false != 123 *= false { ~ ! "bar" / ! 123 [ - ! - true [ - foo ] ] != ! "bar" | true -- ;
 } ;
 } ;
 func foo ( foo int . int . int , foo int , foo int . int ) int { if true { if ( - ~ false ^ ~ - "bar" ( false . foo > ~ ( ! - true <= - "bar" * ! ~ - false ) [ - foo ] , ( foo > ~ true | ( ~ foo ) != foo ) . foo ) ) { foo ;
 } else { ~ ~ ( foo ^ "bar" == - true / ! ! true ) . foo ^ - false / true ++ ;
 } ;
 } else { "bar" + - ( foo ) [ ~ "bar" ^ true ] -- ;
 } ;
 } ;
 func foo ( ) int { ! ~ ( true ) ( ~ 123 , - 123 ) -= "bar" | ! - ~ ~ true & ( - - foo | false ( ) ) ;
 } ;
 foo int . int . int ;
 func foo ( ) int { ! - "bar" ( foo , - ! ! ~ ! 123 . foo ) ++ ;
 } ;
 } ;
 val foo int . int = false [ 123 | foo != ( foo ) * true ] ;
 
