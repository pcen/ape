module foo ;
 func foo ( ) int { } ;
 func foo ( ) int { } ;
 func foo ( foo int . int . int , foo int , foo int , foo int , foo int . int ) int . int . int { } ;
 func foo ( ) int { true ;
 } ;
 val foo int = foo ;
 class foo { func foo ( foo int . int , foo int . int , foo int , foo int , foo int , foo int . int . int ) int . int . int { } ;
 func foo ( ) int { } ;
 foo int ;
 func foo ( ) int { } ;
 } ;
 class foo { foo int . int . int ;
 foo int . int . int ;
 foo int ;
 } ;
 val foo int = ! ~ 123 and - ~ ( "bar" ^ ( true ) ) ;
 class foo { func foo ( foo int , foo int , foo int , foo int , foo int ) int . int { } ;
 } ;
 var foo int = - "bar" ;
 val foo int = ~ true | foo and ( [ ! ( ! true ) , false ] . foo | ! foo ( ) ) ;
 func foo ( ) int . int { for val foo int = ~ true ;
 ! "bar" ;
 123 *= foo { [ ] ;
 } ;
 } ;
 var foo int = - ~ - false ;
 func foo ( ) int { var foo int = foo [ false ] ;
 } ;
 func foo ( foo int , foo int . int . int , foo int . int . int , foo int , foo int . int . int ) int . int { } ;
 class foo { func foo ( foo int , foo int . int . int , foo int , foo int , foo int ) int { true ( true ( - ~ 123 * false and true - "bar" ( false , - "bar" * true , ! "bar" ) , [ - - foo ( ) , ( ! [ ! ! "bar" , true >> ( - ! 123 ) and ! [ ] << ! true ] ) [ true + [ ( - - 123 ) | - ! [ 123 or - ! ! "bar" / ! - true , ~ "bar" , false [ - - ! - ( ~ 123 ) ] and true * 123 <= - true or "bar" >= false , ! ! "bar" * true | - ! ~ - [ ! false , ~ ( ! ! ( false ) [ foo ] ) [ - ~ "bar" . foo or - ~ ( ! ! "bar" ) ] , [ ! false [ [ ] [ ( - "bar" ) . foo or ~ true and ! - ~ ~ ! ( 123 . foo ) != ! [ [ ~ "bar" , ~ false [ ~ "bar" ] , ! ! [ ~ ~ ~ ~ foo or - foo [ true ] , ! - foo , ~ false . foo & ~ "bar" . foo and ~ 123 , [ [ foo ( "bar" ( ) , "bar" , ! ~ foo or ! ( "bar" ) , - ~ true , - true and ( [ - 123 , ~ ~ - - ( ( ~ ! false ) and true >> - 123 ) ( ) , ~ - ( ( true ) [ - [ ] ] ) and - ~ - [ "bar" , ( ! 123 ) >> "bar" , - ! [ foo , [ ] - ~ - ! foo , "bar" ( - ~ ! foo ) or 123 , ! ! 123 ] , "bar" [ false ] , ! - true . foo > ~ false , - foo [ [ - [ ] , 123 >> - - - false ( ) , - false , - "bar" [ ! 123 ] or ~ ! 123 [ "bar" ] , ~ 123 ] == foo & "bar" ] and ( ~ "bar" . foo ) or - foo <= false ] , "bar" ] ) , - ~ ~ - false . foo ) , "bar" ] , ( [ ] ) , ! ~ - - true ] ] , 123 , ! 123 != 123 . foo , ! foo or foo ] ] [ false + ! ~ ( ~ - - [ ] ) ] ] ] , ~ ~ foo ] ] , - ! "bar" ] . foo and false , "bar" , ~ [ ] . foo , "bar" , ! foo , foo ] ] , [ foo and 123 . foo ] , true , foo - ~ ~ [ ~ ! "bar" . foo , foo ] , foo ( ( [ ~ ! - foo >= - ! foo , ! ~ true ] / ~ ~ - "bar" ( ) ) , true [ ! ~ foo [ ! ~ "bar" ] ] , false . foo , true ) ] , ( ~ ~ ! 123 ) [ 123 [ - ! foo . foo and 123 ] == [ ] and [ true , 123 | - ~ ~ - foo ] ] | foo [ ~ "bar" << true ] , ~ 123 , foo , ! false ) , "bar" > ~ 123 and false , ~ ! ~ true != "bar" , [ ! ~ 123 , false , foo and ! - ! - false ( foo ) << - ! foo ] , - ~ ~ ! [ ! [ - ~ ~ false , ! "bar" [ ! false ] < ( - ~ [ ] ) or ! ~ ! - true , ! false , "bar" >= false , - ! ( false ( ) ) ] & ( ( "bar" ) . foo ) , ! "bar" , ! ~ - - ( [ ! [ ] ( ! ~ true ( ~ - ! false ( - [ - ! ~ ! - ( foo ) , foo [ - - - 123 and ! foo ] , true and - foo . foo , foo ] and - ( 123 ) [ - ! [ ] and false [ ~ false ] ] ) , ~ [ ] , "bar" and [ ] or "bar" , [ - - true * ~ - ( ! ! ! - ~ - ( ! ! 123 ) ( ! ! ~ ~ true or ~ ~ ! "bar" , 123 << false == 123 + foo , ~ ( ! - [ ] ) ) ) , ~ ! "bar" + [ true != - "bar" , ~ "bar" , - ! - ~ ~ false [ true and ~ foo / "bar" ] , true , ! 123 and false ] , "bar" ] . foo ) , foo , foo ) , ! - - 123 [ false * ! true or false . foo ] , ! 123 , ! ~ ( ! ( ( ( ! true and foo | ~ ! ~ 123 ) . foo ) . foo ) ) , ! - ( [ - foo . foo or ~ ! ! [ - false , ! false and false . foo , false , ! true , - ! 123 ] , ! ~ ~ ~ false , true >> false , - - foo ( ) , - false << - ! - - ~ - ! ~ ~ "bar" ] and ! [ "bar" . foo ] / - foo [ "bar" [ ! ! true . foo ] * 123 | ! ~ ~ - "bar" ( ) ] or foo [ "bar" [ true ] ] ) , ! [ foo , 123 , "bar" , false , [ ] , true ] ( ) and ~ - foo ] * ~ 123 . foo ) , ~ true . foo and ~ "bar" ^ ~ true & ! foo [ [ ] . foo ] , - ! ~ ~ foo , false << 123 and 123 ] or [ - false ( ) , ~ [ ! [ - ( ~ - foo or true == 123 ) , foo ( ! "bar" , 123 , ! true , ~ - ! - foo , false , true ) != foo , ~ ( - ~ ( "bar" ) ) , - ~ - - ! foo , true [ true * "bar" ( ) ] and ! - ~ ~ foo , - - ! [ [ ] , ~ ! [ ( true < ~ ( ( ! ! true ) ) [ ~ - ~ ! ! ~ [ foo ] . foo % "bar" << ~ "bar" or ~ ( "bar" ) ] == ! [ ] ) - [ ! foo . foo , ~ ! - ~ ~ ~ ~ ( ! - 123 ) , ~ ~ "bar" << foo <= 123 - true != foo or ~ - ! ~ "bar" ] . foo , ! - false . foo ] != [ true , ~ ( [ ] ) , - [ ] ] , ~ ( ! - [ "bar" ( ) != [ ] . foo , ( true & ~ "bar" ( ) ) > [ [ ( ( ~ false ) & 123 and - [ ] ) [ ! ( "bar" ( - [ ~ - - ! - false << ! false ( ) , 123 << - true , "bar" , ! foo or - ! true ] , false , true and - ! 123 <= 123 << foo ( ) , false . foo , 123 == [ - - ! foo ( - ( "bar" ) and foo , true % ! ~ ( false ) , ! [ ] , - ! ~ 123 , 123 , true [ - "bar" ] ) or - - foo % false ( ! ~ - ! - ~ ~ true . foo == ~ foo * false and ! 123 , ! false and ! false , foo . foo ^ ~ ! true , ! false , - true , false . foo or 123 ) , - - "bar" , true , ~ "bar" != 123 ( ) and ( - - ! true >> 123 [ ~ true ] ) ] >> - ~ ~ - ~ ! false , 123 ) ) ] , foo > true != ! ~ ~ [ ] . foo << ~ ~ true [ - true ] , true , - ! - [ ~ "bar" % [ ! "bar" , ! 123 or ~ ~ "bar" % - - ~ ! - ! 123 [ 123 ] , ~ ! false , - 123 , [ ] ] and 123 , - - ~ false , 123 , ! ! "bar" , 123 ] >> ! "bar" , - foo or 123 != ~ ! [ - false ] , ( - - - foo >> "bar" . foo ) ] , 123 , "bar" [ ~ ( ~ ! false % 123 ) ] - ! "bar" , [ foo | ~ "bar" , ~ ! ~ ! - ~ ( [ ] ) and - ~ ~ [ ] , ! ! ~ true ] , ( - ( 123 . foo ) ) and ~ foo ] , - [ - ~ ( ~ true ) , foo , ( "bar" << ! ~ - ( false ) ) , true , 123 ] , true / [ ~ ! - ! "bar" and ( ! foo and ! - ! foo [ "bar" ] ) , ! ~ ! [ ] ] , - ! foo , 123 ( foo , ! true , - ~ false ) ] [ true . foo ] < - [ ! ~ - [ ] , - - foo , false and ~ ! ( "bar" ) , ! foo or ~ true , ! - ! - - - ! "bar" , ~ true | ! - true ] ) . foo , ! ! foo and ( ! ( false ) . foo ) . foo ] ] ] << "bar" > ! foo ] + - ! foo ) + true / [ ] -= ~ [ ( - 123 ) ] ;
 } ;
 func foo ( foo int , foo int . int , foo int . int ) int { } ;
 foo int ;
 foo int ;
 } ;
 val foo int . int . int = ~ ! [ [ ] , 123 ] ;
 func foo ( foo int , foo int ) int . int { for var foo int = ( ~ [ ( ~ - true . foo ) or [ - 123 , ! - true ( false , ~ [ [ ] or ! "bar" , ( ( - foo ) ) ] , ~ true , "bar" and "bar" % ~ true != ! - ~ [ ] , - - - - ~ ! 123 * foo and ! true , ~ - ~ ! ~ "bar" ) or - - - ( ~ ( - [ ] [ ( [ ] ^ ! foo ) and ~ [ ] ( - ! foo , true , - ! - ! foo ) ] << [ ] [ ! foo ( ) ] ) ) + [ ~ ~ false , - ~ ~ ~ - ~ false , true ( - [ foo , - ! foo , foo , - foo | [ ( ! 123 ) >= ~ 123 or ! - false - ! 123 , foo ] ] , ( ! - false and true ( ( 123 >> ~ "bar" ) , - - 123 [ - ! - true . foo ^ 123 ] or - - false > - - true , ~ "bar" , - "bar" - true ) ) , ( 123 . foo ) ( ~ ~ ~ ! - ! foo , ! ~ ! [ ] != - - ~ ( foo ) + "bar" , "bar" == ! [ 123 , foo , 123 ( foo == [ foo <= foo & ~ ~ ( ~ [ ] ) or ~ 123 and - 123 , - ! true , ! ~ ! foo , - true >= ~ - "bar" >> ! foo - true * foo ( ) ] and ! ! - ! - ! ~ - [ 123 < ~ 123 and true , ! ! ~ foo , ~ ! true ] - ( true ) , 123 , ! - - [ ] [ 123 or ~ "bar" ] , false < ! [ false ] | false / "bar" ) ] ) or - false , ! [ ] ) or true ] << ~ ! - [ false , ~ - true ] , - true and ( ! [ ] ) , ! ~ - ( ~ foo or false [ ! ! false | ~ ! "bar" ( - 123 ) ] and [ [ true ( ) , ~ foo , ~ 123 | ! ~ ! "bar" ( ) , ~ ( - true & ( - true ) or ~ true >> ~ ~ - foo ) , ! - "bar" ] . foo >> ~ [ ] == 123 + [ ~ - false != - ! ! ! ~ true . foo , ! [ ] , 123 , [ 123 , ! false [ - "bar" ( "bar" ) ] or false | ( - false * "bar" ) and - true , false [ ! ! ~ ! - [ - - "bar" << "bar" < - ( foo ) and - ~ "bar" , ! ~ ~ false == 123 [ ! ~ ~ ~ - ~ "bar" < foo / 123 ] , ~ "bar" , ! ( ! [ ~ - ~ 123 , [ - true , ~ - ~ true , ~ - false , false [ - - false . foo ] >> false , - ! - - ! 123 * foo != ! ! ~ [ ] >> ( "bar" ) [ ( "bar" ) ] <= ! ! ~ ~ ~ foo - ( - ! 123 ) [ ~ ~ "bar" ] , foo ] . foo , - ~ true % - [ ] , false , - [ ] , - [ - ~ ! ~ ! ! ~ ~ ~ - 123 ] . foo ] ) ] ] , foo << ! ! - ! ! 123 . foo , - foo <= foo , true and - true ] , ( true / "bar" ( ) ) or - ~ ! false [ "bar" ] , ! ( 123 ( ) == ~ ( ! false ) ) ] , - ( ! ! ~ "bar" ) != 123 . foo or "bar" < false , "bar" , "bar" * true ] ) , 123 & - ~ [ false ] , foo ] [ ! - false ] , foo , ! ~ "bar" , ~ 123 . foo or ! [ ] , true ( ~ foo ( ! - 123 ( ) , - ! - true [ ! 123 ( ) ] , foo , 123 and "bar" , true , ! ! ~ true ) or ! ! ! ! [ ~ ( - ~ foo != ! ! ~ foo * ~ ! - - "bar" ( ! [ ] , true , true ) ) and - - foo ] ( ) == foo ( false ( ! ! "bar" , ( true ) . foo , false , - ! ( - 123 ) . foo , ! foo ) - - - - ~ "bar" ) , [ ] , [ ~ ~ 123 , false . foo , foo , [ ] , [ - 123 , [ foo , ! ~ true or ~ ! foo , foo [ ~ 123 > ( ~ ! true ) ] ^ ~ ! ~ - ! false ( ) or 123 , "bar" , [ ] ] , - - ! [ false , - ! ! ~ false % "bar" , - "bar" [ ~ ~ [ - "bar" ( false < ! false [ ! - ~ [ ] or ! - ! - false ] != true and foo or ~ true ( ) , [ ~ foo [ "bar" ] , foo , - ~ false , ( [ ] and false ) . foo , false , ~ "bar" [ true ] ] , ! true , ~ [ ] ) , - ( 123 [ - - ! - ~ true ] - - - [ foo , ! ~ "bar" , false << ( false ) ( [ 123 or foo ] < [ ] & - ! [ ~ ! ~ foo < ! ~ - ! - ~ ( ( ! - false ) ) & ~ true [ ! false and false ] , ! ( ~ ~ "bar" ) == ! [ ] . foo , ! - - foo ] , ! foo . foo != ! ( false ) . foo >> 123 or ( ~ ~ 123 / false and false [ [ ! ! ( - 123 and - "bar" ) and 123 , 123 << true [ - foo ] , foo ] / [ ~ 123 or 123 . foo , ! ! foo [ false [ - 123 ] and ~ ! true ( ) ] , ! foo . foo < ~ [ true ] , ~ - false [ false ] , [ ! ! ! [ - false [ ~ foo [ 123 * false >= ! foo ] or ( foo [ foo ] ) [ true - ! ~ "bar" . foo ] ] < ~ ! ~ 123 , - [ ] == foo , foo > ~ - ! "bar" ] and ( foo ) << - [ "bar" , "bar" - - ~ - ~ [ ] , - ~ "bar" or ! - ! false ( ) ] [ ( ~ ~ - ( ~ ~ - ( - "bar" ) ) ) ] ] , - ~ [ [ - foo , - foo , - [ ] or ! - "bar" , foo and ! [ ] >= - ( - "bar" ) ( ) ] ] ] == ! - [ ] ] ) , ~ false , ! foo & ~ "bar" + 123 , - ! - ! foo & foo and ~ 123 or ( true ) ) and - ! ! - [ ] , ~ false ] ) , ~ false , [ "bar" , foo , ~ false , ~ ~ ~ [ ! 123 , "bar" ( ) , ! "bar" , "bar" , true or ! - "bar" . foo ] . foo , - ~ ~ ~ - foo != ! ~ - true , ! "bar" ] & foo ] ] - false ( ) or "bar" , ~ - - ! foo != ~ ~ 123 , ! ! foo & ! ~ ( - ~ "bar" . foo + ! "bar" ) and ! true ( foo ) ] ] ( ( ~ ! foo >= ! true ) . foo , ! ~ 123 , - - - 123 and ! false ) ] , - [ ( "bar" ) , - ! false , 123 ] ) , ( foo <= ~ ! - ~ [ [ - foo > [ ! true [ - - "bar" ] or "bar" , - "bar" , ! 123 * 123 ] , "bar" , "bar" ] , ~ ! - ! - foo ] ) ] . foo << false % ~ ! - - 123 ) or ~ ! true ;
 false ;
 ~ "bar" != false -- { 123 ;
 } ;
 } ;
 
