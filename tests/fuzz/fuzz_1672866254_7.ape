module foo ;
 var foo int . int . int = [ ] ;
 class foo { } ;
 val foo int = false ;
 class foo { func foo ( foo int . int . int , foo int , foo int ) int { } ;
 foo int . int . int ;
 } ;
 val foo int = [ ( ~ - - - ! ! true . foo ) < - ( - true > ! ! "bar" ) , ! [ ] << - ( ! ! ( "bar" ) ) , false [ foo ] and - ~ "bar" ] ;
 func foo ( foo int . int . int , foo int , foo int . int . int , foo int . int . int , foo int ) int { } ;
 val foo int = ~ - ~ ~ ! - ~ [ ] ^ false . foo ;
 class foo { func foo ( foo int , foo int , foo int , foo int , foo int ) int . int { false or ~ ~ 123 ;
 } ;
 func foo ( ) int { true -- ;
 } ;
 func foo ( ) int { } ;
 func foo ( foo int , foo int , foo int . int , foo int . int . int , foo int , foo int ) int { } ;
 } ;
 val foo int = foo ;
 func foo ( foo int , foo int , foo int . int . int , foo int , foo int , foo int . int . int ) int { - 123 -- ;
 } ;
 val foo int = ! "bar" ;
 
