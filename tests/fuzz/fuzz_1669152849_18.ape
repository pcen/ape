module foo ;
 func foo ( ) int { for var foo int = ! - 123 ;
 - - false ;
 - "bar" { ! ! 123 [ ( ~ - 123 [ - ~ foo ( - ( false . foo ) [ ! ! false ( foo , ~ foo . foo ) ] , 123 ) ] ) ] ;
 } ;
 } ;
 var foo int = - - ! false < ! "bar" [ foo > ( - ( foo ( ! ~ ! - - false > ! true ( 123 | ~ ! ~ ~ 123 , ! false ) , - ~ - 123 <= ! - false ) ) ( ) ) [ - ~ ~ ~ - ! ! foo . foo ] ] / ! ~ ~ - - ~ ~ - true . foo ;
 class foo { ~ ! ! true ;
 } ;
 func foo ( ) int { for val foo int = ~ foo ;
 ~ "bar" ;
 - foo ++ { if true { - false -- ;
 } else { ! ! false / foo ;
 } ;
 } ;
 } ;
 func foo ( ) int { true . foo == - ~ true -- ;
 } ;
 var foo int = false [ ! ~ ! ( ~ "bar" | foo ) ] ;
 class foo { ~ 123 ++ ;
 } ;
 class foo { ! ! foo ++ ;
 } ;
 class foo { - ! - - ~ false ( "bar" != ~ - true & - ( ~ - ~ ~ - foo + - - ~ ! foo ) , ! 123 . foo ) ;
 } ;
 val foo int = "bar" [ 123 ] ;
 class foo { ! true < - foo ;
 } ;
 class foo { ~ - - ( - ! false ) . foo ;
 } ;
 class foo { foo . foo -= 123 != ~ - foo ;
 } ;
 class foo { false ;
 } ;
 val foo int . int = ~ ( foo . foo ) != ! 123 / ~ ~ - ! ! 123 ;
 class foo { for var foo int = ! ! true ^ ( ~ ( true ( ) ) & ~ ! foo <= false ) ;
 false ;
 - - foo { for val foo int . int . int = - foo . foo < false ( ) == false ;
 ~ false ;
 - 123 [ 123 ] { ~ ~ ( true ) + true [ false ] ++ ;
 } ;
 } ;
 } ;
 func foo ( ) int { for var foo int = foo / foo [ ~ ~ - ~ - - false ] ;
 false ;
 ~ ( 123 ) * ! ~ foo [ ~ ~ ! ~ ! "bar" ] = - ! - ( ~ foo [ "bar" ] ) { for var foo int = true ;
 123 ;
 ( ~ ! - foo ) . foo ++ { - ( true ) -= - false ;
 } ;
 } ;
 } ;
 func foo ( ) int { ~ ( ~ - - foo + ( - - false - 123 . foo <= 123 ) ) ;
 } ;
 val foo int = ~ - - ~ false ;
 val foo int . int = - true [ ! ! ~ - ! - ( ( true ) ( ) ) + true ] ^ "bar" ;
 var foo int . int = - "bar" ;
 class foo { for var foo int . int . int = ! - "bar" [ ! true >= true ] ^ false ;
 ( "bar" / ! 123 ( ) == 123 ) ( true > ~ - ~ true , ~ ! 123 ) <= 123 . foo ;
 false ++ { foo ;
 } ;
 } ;
 val foo int = - ! 123 ;
 val foo int = 123 < - ! "bar" . foo ;
 class foo { - foo /= 123 [ ! foo & foo ] / - ! - ~ ! ~ ~ foo ;
 } ;
 var foo int . int . int = ~ ! ! - - true ( ) - false ( false ^ 123 , true < ! ! 123 * - ~ false ) ;
 val foo int . int . int = ( - true ) [ foo [ - - 123 ] ] ;
 func foo ( ) int . int . int { for var foo int = "bar" ( ( ~ 123 ) , 123 ) - ! 123 ;
 ~ ~ - ! ~ 123 ( ) / - "bar" ( ~ false , ! true [ false * ! 123 ^ ( "bar" ) ] ) >= ! true ;
 true ( - ~ - ! - - "bar" [ - ! true ] , "bar" ) -- { for var foo int . int = - "bar" == "bar" ;
 ~ - ! "bar" . foo ;
 ( ( false ) ) ( ~ - - ! 123 ( - ! 123 > 123 [ ~ ~ false ] , "bar" ) , ! ( 123 ) ) { ~ "bar" & ( - ( foo . foo ) ) = true [ false & 123 ] ;
 } ;
 } ;
 } ;
 
