module foo ;
 val foo int = false & true ;
 val foo int = ~ foo & foo ;
 var foo int = foo != ~ ! ~ ( - 123 == ( 123 > - foo != ! false + ( 123 != foo ) ( ! ! ( 123 ) , - 123 ) >= - foo ^ false . foo ) ) > ! ~ - ! ~ false ;
 class foo { ! false ( false , - ( "bar" . foo ) ( - true , false . foo == false ) >= ( ~ ~ "bar" > ( - true ( "bar" , ~ true & - - - ~ - 123 ) < false [ - false ] ) ( ! ( - ! ! ~ ( - foo > - ! ~ "bar" . foo ) ) , false [ ! 123 ] < true == ~ false ) * "bar" ) ) ;
 } ;
 val foo int = 123 [ ! true ] | "bar" ( "bar" , - 123 . foo ) ;
 func foo ( foo int , foo int , foo int , foo int , foo int , foo int ) { if ( true <= 123 ) ( ! true , 123 ) & foo + ~ ! true { if foo & ! true { if "bar" [ - foo != ~ - ! foo [ foo < false . foo ] ] { for val foo int = ~ ! ~ 123 >= 123 / ! - - - ( ~ ! ~ foo [ - ~ true < 123 . foo - - false ] ) ^ - foo ;
 ~ foo ;
 ~ ! false -- { for val foo int = 123 . foo ;
 - foo . foo ;
 false -- { for var foo int = ~ false [ "bar" ] < true / true [ foo [ "bar" ] ] ;
 ! foo ;
 "bar" != true - foo . foo { false . foo = ~ ~ 123 ;
 } ;
 } ;
 } ;
 } else { ( - ~ ~ false ( ! false [ - - ~ ~ true ] , 123 ) ) == - foo ( ~ ~ 123 . foo , ( false ( ! - ! ~ ~ ~ "bar" [ "bar" ] , true ) / ! ( true != 123 ) [ true ] > ! 123 ) ) >= false ( ! ! ! ! ~ "bar" & ( ! ~ - false ) , ! 123 ( - 123 / ~ ( 123 ( true , "bar" ) & ! 123 ) <= ! ~ false , foo ) ) ++ ;
 } ;
 } else { for val foo int = ~ 123 ;
 ~ foo . foo * - - ~ true ;
 "bar" . foo < ! true | ! true = foo { for var foo int = ~ - true ;
 - ! ! false . foo ;
 false & "bar" ++ { ~ true **= "bar" ;
 } ;
 } ;
 } ;
 } else { ! - 123 ;
 } ;
 } ;
 class foo { if - ~ ~ ( - foo ( ( ! ! "bar" - false . foo * - ~ ( ! - - true ( "bar" [ ! foo ] , ~ ~ 123 ) ) [ ( 123 [ - ~ foo ] ) [ ~ ! true ] ] ) , ( true == ( ! false ( "bar" , ! ! "bar" ( foo [ 123 [ ! - ( foo ^ foo [ 123 ] ) + - "bar" ] ] | ~ foo , true [ "bar" ] ) & ~ 123 ) - ! - "bar" ) ) ) ) . foo * "bar" { if ! ! foo . foo { ! - foo ;
 } else { ~ ~ "bar" ( ~ ~ 123 , ~ ~ ~ ( 123 ) . foo ) += foo ;
 } ;
 } else { ~ - ! "bar" [ ( ~ ~ ~ 123 ( ( ~ ~ - "bar" ( ~ true & ~ "bar" , ~ "bar" * foo . foo >= foo ) & - - - ! - ~ "bar" ( ( ~ true == - 123 ) < - true [ "bar" ] , "bar" < true [ 123 ( foo , ~ ( ! ( ~ ( false [ - foo & ~ ~ "bar" ] * ! "bar" ) + ! false ( - - ( "bar" . foo ) > 123 , - - - ! ( false [ - ( - ( ! foo | 123 * true ) < ( "bar" . foo ) * - ( ~ true ) ) ] ) ) ) ) > ~ true ) ] | ! ! ~ 123 ) ) > ! ! true . foo == false , ~ true ) ) [ ! - ~ false > - ! - false == ( - 123 ) ] ] < - true ( ( ~ "bar" + ( false - false [ ! ~ - ! foo ^ - ~ "bar" ] ) <= ! ~ foo ) , ! ~ foo ) -- ;
 } ;
 } ;
 class foo { for var foo int = - - - true ;
 ~ 123 ;
 - - - - ~ ( ! ! foo . foo != true ( true < - ~ ~ true . foo , - ( "bar" / ( ! ! ~ ~ ! false ) ) / - ~ ! true ) ) [ false ] * true <= "bar" . foo += "bar" . foo { if ~ - "bar" { foo ^ - - true <= ( true != ( ( foo != foo ) ) ) += - - 123 ( true ( "bar" != ~ false . foo , ! ! ! ( ( ( 123 ) ^ false & "bar" ) . foo ) ) * ! "bar" , ! "bar" ) > false ;
 } else { ( ( - "bar" & ( true ) [ "bar" ] != foo ) [ 123 | "bar" ] == - ( ! foo [ 123 > foo [ ! ~ 123 [ true + 123 * false ] ] == true ] ) <= 123 ) ++ ;
 } ;
 } ;
 } ;
 func foo ( foo int , foo int , foo int , foo int ) { "bar" -= false ;
 } ;
 val foo int = ( - ( ! ~ ~ - ! true ) ) | ~ ~ - ~ ! - ~ true ( ~ ! foo , ! ( ~ ! - true / - ( ~ foo + foo / false ) != ~ ! foo ( - ! - true ( false , "bar" ) , foo [ - ! false < ( 123 | - - false == true . foo ) != 123 [ ! ~ 123 ( ! ( ~ ~ ! - - foo - ! 123 ) , ! 123 ) < foo [ - 123 [ false ( false , ~ false ) ] | - ! "bar" < ! ! - - - true ] - - ~ ! - ~ "bar" ( false , false ( ! 123 , ! foo ( ! ! "bar" + 123 , "bar" ) ) ) ] ] ) + - ( ~ - ~ - ! ~ false ) / "bar" ) / "bar" + ~ foo . foo != - ( ! - "bar" ) ) ;
 class foo { - foo -- ;
 } ;
 func foo ( foo int ) { "bar" -= false ;
 } ;
 class foo { ~ true > true ++ ;
 } ;
 class foo { if false { "bar" += false != 123 ( - "bar" , ! ! ( true ) ) | - ~ ! false ;
 } else { ! true ^ ~ ( ~ foo ( - true != - - - - ! ( "bar" ) , ~ true ( ! ! ~ ~ "bar" . foo & true , ~ 123 . foo - ! ~ foo ) ^ ~ - 123 ) ) [ ~ "bar" ( ( ~ ~ false ^ false ) , - ~ "bar" [ ( ~ - "bar" ( ( "bar" . foo ) [ - 123 ] , true ) / foo [ ~ 123 ] ) ] ) ] != "bar" / 123 ;
 } ;
 } ;
 var foo int = 123 ( ! ~ ~ 123 > 123 & ~ "bar" == foo [ false [ foo == true ( false , ~ true | 123 ) & true ] ] , ! foo ( ! 123 , ~ false ( 123 , ~ ~ true . foo ) ) ) ;
 class foo { true ( "bar" , 123 ) ++ ;
 } ;
 var foo int = "bar" ;
 class foo { ! false == - - "bar" ++ ;
 } ;
 class foo { ( 123 ( ! false . foo , foo . foo ) ) ( false , "bar" ) ++ ;
 } ;
 class foo { foo -= foo ;
 } ;
 var foo int = ~ ~ ( ~ foo ) == "bar" [ - "bar" * "bar" ] < 123 ;
 var foo int = - foo ;
 class foo { - ! foo -- ;
 } ;
 
