module foo ;
 val foo int = true ;
 var foo int = [ false , ( ( ( foo ) ) & ( - ~ - ( ! - ~ ! - false ) >> ~ - ~ 123 ) ) , ! false , ! - foo , foo >> ! - ( [ foo , ~ "bar" ( ) , ( - foo [ ( - 123 ) [ ! ~ "bar" ^ "bar" ] ] ) >= ~ ! ~ [ foo , ! false , foo [ ~ - ~ "bar" ] | ( ~ ~ [ false ( ) , - ( ~ - [ ] * - [ ] ( true , "bar" ) ) . foo , - foo ( false , ~ foo ) , ( foo ) ( ) and ! [ [ ( ( ~ 123 ) [ [ ( [ ~ [ ] [ foo [ false or ! ! - "bar" ] ] and - [ 123 ( ) and - false ] >> foo , true ( ) ] != false or ( 123 ) ) , "bar" . foo , true << true , ! - [ ~ ! false != ~ ~ ~ ! ~ "bar" , ~ ! false ( foo , - ~ ! 123 , true , - "bar" ) , ~ ! ! 123 and [ ] ] , - - true , ( - [ ] or ~ foo ) ] >= ( - "bar" ) >> ~ ~ ! ( ! - - ( - false - ( false ) == - ~ ! "bar" ( false or ( - true ) ( false ) and [ ] << ~ ( false [ foo [ ! ( ~ false ) and - foo . foo & - ! - - ! 123 ] ] & true ) , - - ! ~ ! true . foo == 123 , - true , [ [ ~ ! - "bar" << false , [ ] or 123 , - - ( ! "bar" ) , 123 , - - foo , "bar" or false < ! - - false - ~ "bar" and - 123 ] , false or foo != true [ foo >= foo << ! - false ] , ( true [ - false or ( ( ~ 123 . foo - false ) ) ] ) ( 123 , ~ [ ] , [ ] , foo , ( 123 ) ) != ~ false , ! false , - ! ~ ~ ! ~ ! ! ! false ] [ ~ - ! ~ false . foo and [ ] ] , ~ true ) << 123 ) and - true ) and ! "bar" . foo ] and foo ) [ - foo ] , 123 , [ ] % - ~ "bar" , "bar" , ( ! ~ [ ] ) , ~ ! false ] , - [ ] == ~ false & false , ~ ( [ ] ) ] ] + ! foo >> "bar" ) ] , ! [ false [ 123 . foo ] != - ! ~ ( - false ) , ! ! ! ! ~ ! true [ ( ! 123 and [ true , ~ foo or false ( ! "bar" , ! [ false , [ false | "bar" >> - [ - [ ~ ~ true > - ( 123 [ - - 123 ] ) , [ ] , "bar" ( - foo or ~ ! ~ 123 [ - foo * ( ! ( [ ~ ( [ ] ) ] ( ~ foo , "bar" ( ) << ~ ~ ~ foo . foo > 123 or ~ [ ] , - ( - ( [ ] [ ! [ ( foo . foo ^ - "bar" ) , ! ~ ~ "bar" , - foo ( "bar" , ~ [ ~ false ] , ! ! [ ] , foo * ! ~ true , true , ~ ! foo ( ! - ~ ~ ! - true , [ ] [ ! ! ! - foo ] , foo , true ) and ~ ( ~ ( "bar" or "bar" and ( - ~ ( [ ! foo , foo . foo , - - ~ ~ 123 - - ~ true , ( ~ - ! false ) < false [ true . foo ] or ( true ) & [ ! - "bar" , foo . foo , true ] > false & ~ - foo [ ! ~ - - 123 ( "bar" , ( foo == - ~ foo ) , ( ! ~ false * foo << ~ ! ~ ! - [ ] - - - ~ false / ! ~ - - false ) , ~ [ ] >= ~ foo , ! ! true [ - ~ - foo ] , "bar" ) and ~ foo ] ] ) & - - false ) ) ) ( 123 , false [ "bar" . foo ] , - ! [ ~ - - - - true , 123 << ! 123 , ~ true ( ) , - [ 123 or - ~ ~ ! 123 , - ~ ~ ~ ~ true , true [ ! ! true ] , false , 123 , ! "bar" ] [ 123 . foo / - false ] or "bar" , false <= ( true ) ] . foo , ( - [ ] ) , 123 ) ) ] >= - - false ] ) . foo - ! [ ! ~ ( 123 . foo ) [ ( ~ ~ 123 ) and false ] , [ [ false , "bar" % ! true , ~ - ~ ! - false and false ( ) | ! [ ! "bar" , [ ] , - true or 123 ] , 123 == "bar" , true ^ - - ! ( foo > ( - - "bar" ) ) , - - - ! false * ( ! ~ true ) != "bar" [ 123 [ ~ 123 ^ ~ ! - ( true == true ) ] ] & 123 ] ] & 123 ( ) >> ~ 123 == true - ! - ! true , - - - ! ~ ! ( foo << ! [ ~ foo , false , - ( "bar" ) , ~ true and ! false , ~ ! ( "bar" . foo ) ] ) , true [ 123 ] , - ! false ( ) and ! ! ! ! ! ! - ! foo , true ( true , ( - [ ] . foo >> - ! false ) , - ! foo , ~ false , 123 >= - ~ false , ~ ~ false >> [ ! - true , [ ] , - "bar" or - ! ~ ~ ( ! ! ~ "bar" ( false , [ ] , ! "bar" , ~ false ) * ( - - false ) or ~ ~ "bar" . foo << 123 ) and ~ ! ! ~ false > ~ ( 123 ) ( ) , "bar" , ( true ) >> true , ~ ~ ( ! false [ ! ~ foo ] ) ] or true ( ~ 123 ) ) or ! "bar" > ~ ~ true ] == ! false ) ) ) ) and ! - - false or ! false ] ) , - true , "bar" , [ - ~ 123 [ - ~ - - - ~ foo >> 123 ] / foo , false . foo and ! ! - - ~ foo , true ] == [ ] ] + - ~ ! foo ] , ~ ! [ ] , ! ( "bar" ) and - ! ~ true , "bar" ] + ! foo , ~ true , ~ ~ [ ] and false / ! - 123 or [ 123 , ~ ~ false , - - - [ ] , - true ] , - ~ [ ! ~ foo , ~ - "bar" <= true . foo * - ~ ! - ~ - foo ] >> "bar" . foo , ( true ( ) and ( - ! ! ~ ~ [ ( "bar" [ [ ! foo [ ~ false or ! true ] & - "bar" ( ) and ~ - [ - ( false ) >= [ ~ [ ] , ! - ~ "bar" . foo ] == ! - ~ ~ ~ - ~ ~ "bar" . foo , - ( [ [ false , true >= ( - [ ] ( ) ) , "bar" . foo , [ ] , 123 ( ) , - - true ] , - "bar" / "bar" , ! "bar" , "bar" ( "bar" or ~ "bar" , ! ! 123 and - ! [ ] ( ) , ~ ! 123 , foo ) , 123 [ [ foo , ~ - ( "bar" / "bar" ) != "bar" > ( - ~ ! [ ( - false . foo >> 123 ) , "bar" or ! ! - ( ( foo [ ! foo and ! - - - foo != ! ! ( 123 ) ( ) ] and "bar" . foo ) ^ ( - "bar" [ ! "bar" ] ) ) ( ~ ! true ( ) or ! 123 ( - ! 123 , true , - ( ! ( ~ "bar" < - - ~ true ( ) ) != ! true ) and ~ ~ [ ] == ~ ~ "bar" * foo - true , [ ] ( ) , - - foo ) , "bar" , ( ~ ~ ! ! ! false != - - true ( ) / ~ "bar" ) . foo , ! - true or foo . foo , false >> ( ! foo <= "bar" ) - "bar" % - 123 . foo or ~ ! true [ - - ~ ! [ ] ] , "bar" or ( "bar" * - foo or ! foo ) == true <= "bar" . foo ) == ( foo ) [ 123 ] & ~ ! - 123 and ! ! true , foo , ( - 123 ( ) or - - ( ! [ ] > - ! - ( ~ ~ ~ "bar" ) and 123 ) ) , ~ ! ! foo , ( 123 + ( 123 . foo ) ) ] ) [ ! - [ ] * - foo ] , 123 ] . foo ] == - false ] << ~ ~ - true ) [ - ! 123 ] or ~ - ! "bar" , false , "bar" ^ "bar" ] - ~ - [ ] , ! ( - ~ ! ~ 123 and ~ ! ! "bar" ) . foo , - false | - ! ~ - foo and ( ~ ~ ! ! "bar" . foo ) , - ! ~ ~ 123 ] ] ) [ foo >> ( ! ! ! ~ - ! foo ( ) & "bar" or ! "bar" [ false * ( ! - [ ] ) ] ) ] / foo ( [ 123 >> foo [ ! ~ true . foo ] , [ ] == foo or ~ [ ] , 123 ( 123 , - ! "bar" << - foo , ! false > true and 123 ( true , "bar" or 123 [ - - - ( ~ true ) ] , ( - ~ "bar" . foo << ! - ! "bar" ) ^ ~ ! false . foo and "bar" ( ) or ~ ! true [ 123 ] == ~ - "bar" , ! - - ( 123 ) , ! false ( ) , ! ~ [ "bar" [ 123 ] ] ) or [ ~ ~ "bar" , ! [ ] . foo != ~ foo , foo , ~ ! ! ( false ) , false ] , [ ! ~ 123 , true ] , ~ [ ] , false [ - ! ~ ~ - ( [ ] ) ] or ~ [ ] != [ ] ) or ! false , - true , - ~ ! - false ] and "bar" . foo ^ - ~ [ false < true , - true % [ ] or ~ ! ! foo [ ~ false != - - ! "bar" | true and "bar" ] , ~ ( - - 123 or ~ - true ) [ ~ true ] or "bar" , foo and "bar" , ~ true or ~ ! [ ] , ( 123 [ ! foo >= foo ] ) ] , 123 , - ~ ! foo << ! - ! - ( ( 123 [ - ~ ~ false . foo == false ] * false ) ) , - ~ foo ) and [ ] [ ~ 123 ] , ~ "bar" , ( [ ] ) , foo ] ( - false ) ) ) ] ) , ! false ] [ - foo ] == ~ ( foo ) [ "bar" >> false [ ~ [ ] % ! ~ 123 | 123 ] ] or ~ ~ ! false ) ] & - ~ [ foo , 123 , - true ( ~ - "bar" , [ ] , foo , ! true , ! ~ "bar" % true | ( false ) ) / ~ ~ 123 , [ - true != [ ] - - ( [ ] ) . foo , [ ] , false and ( - ! true ) , foo < "bar" - false ] and ! true >= 123 ] << ! 123 [ true ] and - foo [ - true [ true . foo ] and ~ ! true ] or - - - ( [ ( "bar" ) ( ) , ~ true , ( ~ - [ ] ) . foo , ! - 123 ( ) >> - ~ 123 and "bar" , ! ~ ! ~ - - true and ! - false . foo ] ) ] . foo ] ) , ! foo ] ;
 var foo int . int = - ( ( - 123 ) ) . foo or ~ - ~ - ( ! 123 ) ( ! [ - foo % "bar" , ~ ( ! ! ~ [ - [ ] << - ( "bar" ) , - false / ! ! - [ - ( foo ) [ [ foo [ ! 123 + ~ foo ] , true ( ! ~ ! foo , [ ] and true , - ~ 123 , ! ( true ( ) ) ) , [ ] , ~ ( - "bar" ) , - "bar" , - ( "bar" * - ( 123 >> ~ - true [ 123 ] and 123 [ 123 ] ^ - - [ ] . foo / - "bar" ) ) and "bar" ] ] , "bar" , ( foo ) , false and ( "bar" >> "bar" ) , [ foo & - true and true ] or ~ ( ! "bar" > ( - ~ ! ~ foo ) ) - - ( false ) / ( ~ ! ~ foo . foo ) <= true ] ] ) , ( ~ - true . foo <= false ) , 123 [ foo ( ) ] , "bar" , [ true [ [ ] ] , ! - "bar" and "bar" % [ foo , ( - - ( foo & - foo ) != foo or - foo ) % foo , [ ] , foo , ~ [ ] ] ] . foo != true ] , ~ true , foo , "bar" ( - ( "bar" ) >= ! ~ ! - - - foo , 123 and true , ( [ ] and foo ) ( ~ 123 , ( ~ ~ 123 . foo and ! - false == - "bar" ) and ( "bar" != ! ! 123 ) < ! ! ~ ! false , 123 ( ) or ( 123 + [ [ ! ( ~ - 123 ( ) > foo != false << false ) . foo ] == foo , 123 ] <= - ( true ) or 123 [ 123 and ~ ! - - - ( - ! ~ ! true or foo ) << "bar" ( 123 , - - "bar" ( ) << ~ foo , false + 123 ) ^ foo ] ^ ( 123 >> - [ ] [ foo != - true ] | ! - - ( ~ 123 or false and ! ~ ( - - [ ] . foo ) ) ) ) . foo , [ ! false and ! ! - 123 or ! foo and ~ ~ [ true [ "bar" ] , ~ ~ ~ "bar" and - foo << ! ( 123 <= foo ) , "bar" ( ) and - ( - - false or ! ! ( 123 ) ) ] [ ~ ~ true ] , "bar" ] [ ! false ] , ! ~ true . foo and false , - foo ) or false , "bar" . foo ) and [ ] , false ( ) , foo ( ) and ~ ~ true << ~ - ! ~ 123 ) ;
 class foo { func foo ( ) int . int { } ;
 } ;
 class foo { } ;
 val foo int = [ ~ foo >= ( 123 . foo ) << ! true , - foo * 123 , false [ ( [ ] ) . foo ] , - "bar" , false ] ;
 func foo ( ) int { } ;
 class foo { foo int ;
 func foo ( ) int . int . int { } ;
 func foo ( foo int ) int { val foo int . int . int = - [ ] and - ! ~ foo ;
 } ;
 foo int . int . int ;
 } ;
 class foo { func foo ( ) int . int . int { } ;
 foo int ;
 func foo ( foo int , foo int ) int { } ;
 } ;
 var foo int = ~ foo ;
 var foo int = - ~ ! "bar" ;
 val foo int = ( [ false , true , ~ - ~ ( ~ true and [ ~ ! ~ 123 [ ~ foo ] , "bar" , ~ - 123 >> ~ ( ( ~ ( - - - false or foo < [ - ~ ! - foo , [ ] ] and "bar" [ - [ "bar" , ( 123 . foo / ! "bar" ) - ( ! - - ! false ) , 123 , ! 123 ] ] ) + [ ~ - ~ "bar" | - "bar" == - [ ] [ ~ 123 ( [ ( [ ~ ! ! ( [ ~ - false and ( 123 ) , foo , ! ( "bar" == [ ] ) , foo ( foo % foo , ~ false != - ( - foo ) , "bar" and - ~ true . foo , ! ~ - true ) , false ( ) , "bar" ] ) , false , ~ true >> - - - true [ ~ - 123 [ ( 123 ) ( ! ( - 123 | 123 [ ~ ! ~ true ] == [ "bar" , ~ ~ - [ ] >> foo . foo , ~ - ! 123 . foo and "bar" [ ! - - - ( ( "bar" [ ~ foo ] ) ) < foo | [ false , ~ ~ true . foo , [ ~ true and true ] / 123 , "bar" or ~ - ~ - 123 >> true , foo ] ] , ~ [ ] , ~ 123 ] or [ [ ! ( foo or ( ( 123 ) - ~ 123 and 123 ) ( ) ) , ! false and true , 123 << - ~ ~ ! 123 ] , "bar" , ~ [ ! ~ ( false ) , 123 / [ ] , - true , foo , false and foo ( ) or ! ! ( ! foo ) , - foo ] . foo & ! false ] ) , true . foo , ~ - - - ! ~ ~ ~ false , - ! 123 or ! true != ( ~ foo ) , ~ true ) % "bar" ] ] and - ( true | 123 & false >> "bar" % [ - ~ [ false ( ) - "bar" ] and foo , "bar" <= ~ ( ~ ! ! ~ - ~ ! ( ! - true << false ) ( ( false ^ false ) , false ) or foo | ~ - foo ) [ ( ! [ - foo , 123 . foo , false ] | ! foo ) ( ) ] , ~ 123 , [ [ ~ ( - - foo == - foo ( ) ) [ ~ ! 123 ] , "bar" [ ( foo | 123 ) ] , "bar" , - foo <= false [ false ] , - foo [ ~ ~ true ] and ( ~ ~ ~ ! true ) , ( true [ ( ! 123 ) ] ) & - ! "bar" ] , "bar" , ! "bar" ] and ( ~ - ! ! false ) ] ) >= ~ false , - true >> ( ( ~ [ ] << foo [ - false ] ) - ( ! ! foo >> [ ] == ! 123 . foo << true ) ) , true ] or false & true ) , true , - ~ false , ( ~ - ! 123 ( ) ) ] - 123 ( ) or "bar" , ! false , false == ! ! false , false , 123 , true & ( false ) [ ! true ( ) ] ) ] , [ ] or [ foo , [ ] and ~ [ false , ( - false [ ! - true | ~ - [ ] << ! false ^ [ ] [ ! foo or ( ( false ) ) ] or ~ ~ ! ( [ ] and 123 ( ! - 123 and ! "bar" ( ( ! foo <= true . foo ) or [ ] , [ ! "bar" , true ] . foo , ~ ! foo ( false , ~ ~ true >= true , ( true ) . foo ) , ! false , [ - false and true [ true ( ) ] , true , ~ ~ ~ "bar" ] . foo , ( "bar" ) ) , ( ( "bar" and true ) . foo ) ) ) ] != "bar" ) * ~ - ! ! [ 123 == foo [ [ foo ( ) , ! 123 or ~ - - ( ! [ ] ) , ( true [ true ] ) or foo ( ) and - foo , foo ] + - false / 123 != ~ [ ] ] or ~ [ ] , ! foo >> "bar" ^ ( false ( ! - 123 << ( foo ) < true | ~ - - true , - ! - - ~ "bar" , ~ ! [ - ( true ) , 123 ] , "bar" , ( ! "bar" << ! - - - true or 123 >> - ! 123 ) , ! "bar" >> ( true ( ~ 123 , ~ ! - ~ ! "bar" ) ) ) == ! foo ) [ "bar" ] , 123 . foo , ~ ~ ! - "bar" , - ~ true . foo , ~ 123 ] and false [ - ~ ( false . foo ) . foo ] , ! ( ~ ~ false ) and ! - ( ! ! ( ~ true >> [ ! ~ - foo , true , ~ ~ true ] [ ! ( ~ ! - [ ] - 123 ) << ( ~ true <= - ! ( false ( ) ) [ "bar" [ false | 123 ] ] and true >= ! ~ ~ true or ~ false [ false ] ) ] & "bar" ) and - 123 ) ] ] , foo [ ~ false . foo ] << ! foo and foo , - "bar" and true != true , - - - - 123 ] ( ) ) or ~ false ) , - false , foo ] % [ ] or ( "bar" ( ( [ ] [ foo and false ] ) [ - foo ] , 123 > ! - ( [ ] - - [ ] ) or [ ] , ~ false , ( true ) and - ~ foo , - ( [ - ! "bar" <= ( ! false . foo > ! "bar" ) ( ~ true , ! ~ - ! [ ] [ - 123 ] , [ ( [ ] ( ) and ! ~ 123 - foo ) or [ ] >> foo and - "bar" , "bar" and ! foo , foo >> - - "bar" + [ ] or ~ ! - - [ ] << ~ [ 123 [ false > ~ false or foo ] ] , ~ ! ! true [ - - [ ] and 123 ] , "bar" , false or - ! ~ ~ - true [ - - false ] ] | foo >> - ~ ~ ! ( 123 . foo ) ( ~ ~ true . foo or ~ ( ! ( - - ( true and ~ ~ ! ( false . foo ) ) ) ) [ - ( ! ! - ! ! ~ true ) ] , ~ "bar" ) , 123 ) , ! ~ ( ! - true / ~ false . foo ) , false ] ) or - ( false >= ! "bar" [ false ] ) . foo ) or foo ) ) or - true ] >= true ) ;
 func foo ( foo int . int ) int . int . int { val foo int . int . int = false ;
 } ;
 class foo { foo int . int . int ;
 foo int ;
 func foo ( ) int { } ;
 func foo ( foo int , foo int , foo int , foo int . int . int , foo int . int . int ) int { var foo int . int . int = false ;
 } ;
 } ;
 class foo { foo int ;
 foo int ;
 func foo ( ) int . int . int { if [ ] { } else { } ;
 } ;
 } ;
 class foo { foo int . int . int ;
 func foo ( foo int , foo int , foo int . int ) int { } ;
 foo int ;
 foo int . int . int ;
 foo int ;
 } ;
 class foo { func foo ( foo int . int , foo int , foo int . int . int , foo int , foo int , foo int ) int . int . int { } ;
 func foo ( foo int , foo int , foo int , foo int . int , foo int ) int { } ;
 } ;
 var foo int = ! foo * true and ! - "bar" ;
 var foo int . int . int = ! ~ false ( foo != ( [ ] + ! ~ - true ) , true | - ! "bar" , ( - ! "bar" ) ) ;
 val foo int . int . int = [ ] - ! ( 123 and - foo & "bar" >> ! - ! [ ] ) ;
 var foo int = ~ ! ! 123 ;
 class foo { func foo ( ) int { val foo int . int = 123 ;
 } ;
 foo int ;
 foo int ;
 foo int . int . int ;
 func foo ( ) int { } ;
 } ;
 var foo int . int . int = ! ! foo . foo and - - false ;
 class foo { func foo ( ) int . int { } ;
 foo int . int ;
 func foo ( foo int . int , foo int , foo int . int , foo int . int . int ) int . int { for var foo int = ~ false == ! 123 or ~ true and [ "bar" or ! true [ - ~ "bar" and - - true << "bar" ] , false and foo , false , ( - ~ ( foo ) ) , - ! ( [ 123 , ~ [ ! ( - ! ~ 123 ) * - 123 , ! ( 123 ) , false <= 123 ( ) and [ ! ! ! ~ false , "bar" ] , false , [ ~ ( ! 123 == "bar" ) . foo - ( - foo ) , "bar" , foo * false ] and foo ( - ( ( - ! 123 ) [ 123 ] ) or - - ( - - ! "bar" and ! 123 ) , ~ "bar" [ ~ true >> "bar" and 123 . foo ] < ~ ! ~ 123 . foo / 123 . foo , ( 123 ) , ( ! ( - - ! ! ( 123 ) and ~ [ ~ "bar" , "bar" . foo , false >> foo , ( 123 ) [ 123 ] ] ) ) . foo , ! - foo ( ) * - 123 , ( ! "bar" ) and "bar" ) != "bar" or - ! ! - false >> - [ ] , ( false ) % [ false ( ) ] [ true ] ] ] ) . foo ] . foo ;
 [ ] | ! false [ true ] ;
 false . foo %= ~ 123 { var foo int = - - true [ [ ! - "bar" << - ( - - ~ "bar" < ~ ( foo ) ) , [ ! [ ] ] and ~ ! - ( "bar" . foo and foo ) == - ! ~ - ! ( ! true >> ( ~ false ) ) [ "bar" ] or false != ! ~ ! ~ foo [ 123 ] > "bar" , ~ - ! ! ! 123 , - - ~ - [ ] , ( [ ! ~ "bar" [ [ foo | true ] << ~ ~ "bar" ] , "bar" or ! ! ! [ ] . foo , [ ] or true , ! false . foo ] and ~ ( "bar" [ - ! true ( ) ] ) ) ] ] ^ foo ;
 } ;
 } ;
 func foo ( ) int { var foo int = ! foo [ ~ foo >= - true ] ;
 } ;
 } ;
 class foo { func foo ( ) int . int { } ;
 foo int ;
 } ;
 class foo { foo int ;
 } ;
 class foo { foo int ;
 func foo ( ) int . int . int { var foo int . int . int = - ~ - false * true and [ ] ;
 } ;
 foo int ;
 func foo ( foo int , foo int ) int { } ;
 func foo ( foo int , foo int , foo int , foo int , foo int . int ) int { ~ ~ true [ [ false [ ! false + ~ ~ ~ ( ~ false ( ~ foo , ! ~ foo | ~ - [ ~ ! - foo , ~ ( foo or ! - ! false ) , - ~ "bar" , [ ! ~ ! 123 , - foo [ ~ ( ~ ! ( - false [ ~ false ] < false ( true or - ! ~ foo ( ) , [ - foo [ - - ( false ( - false + ( false ) . foo >> 123 , ( true != ~ ~ ~ "bar" ) , ~ ( false ) , ! ! 123 [ - - [ ] ] ) ) <= false ] , - ! ! ~ "bar" , ( "bar" != ! ! - 123 [ foo ] ) / [ [ "bar" or ~ ~ ! 123 ] ( ~ - ! - - ( [ ] ) % ~ - ! [ ] >> - true != ~ - - ! 123 , ~ true > ( ~ ~ "bar" ) , true * 123 ) or ~ ( ! [ - 123 % ( ! [ - ( true . foo or 123 >= false ) ] ) , false ] ) and - ~ - ~ true [ foo ] , ! - - ( ! ! - false / foo ( ) and - - ~ - ~ - "bar" ) >> - ( - foo ) ] , foo / foo , true ] , "bar" ^ ~ false , - ! true , ~ ( ( ~ 123 ) * ~ ~ ~ ~ ! - true ) ) ) ) <= false ] | [ ] , "bar" , ~ true , true . foo ] ( ) , ~ - [ ] , false ] ( 123 , ~ false , "bar" and - 123 ) ) ) ] and ! ~ true . foo , ( false and ( - ! - 123 ) ) < ( - - ( foo [ false ] ) ) , true << ! ! true [ - ! ( [ ] [ false ] - - - - [ foo [ 123 ] , ~ [ ] == - ~ [ ! foo , ~ ~ ~ ( ~ ~ ~ 123 and [ - 123 ] ( ) or ! ~ 123 ) != [ ] , ( ! 123 << "bar" ) . foo , foo != [ 123 . foo , - foo >= ~ - ~ ! ( false and [ "bar" , ! ~ ~ 123 ( ~ foo > ! ~ ~ 123 and - foo , - - - foo % ~ - [ ! ! ! "bar" , "bar" ] ( "bar" ) , foo << - [ ] and 123 ( ) * [ ] , ~ ! - ! [ ! ~ ( ! true ) ] , - [ 123 or 123 and [ ] , ~ - 123 , ! true , ! false , foo [ foo ] / true , ~ true ] ) , [ ~ ~ - foo , ~ ! ~ - - ~ ~ ~ true , ( 123 ) , ~ - foo [ ~ false ( ) != "bar" . foo ] and ~ "bar" ] ] ) [ ~ false ] , - "bar" << false , true [ true ( foo , true , [ true , ( ~ "bar" or ! ! [ ] and [ ! foo ( true or true ) , true , "bar" . foo , foo , ! ~ [ ] , ~ [ [ "bar" . foo , false , "bar" ] and "bar" , ! - - - ~ ~ 123 , ~ ( true != [ ] ) , true and "bar" ] ] ( [ ] [ 123 ] , ! ! true >= [ ( ( 123 ) ) , [ [ - ! - [ ] != ! [ true , - - ! true . foo , ! "bar" , 123 ( ) >> ! ( ~ "bar" ) ] & ! ~ - ( [ ] [ - false or true ^ ! "bar" ] * "bar" == true and ! false ( ( ! - ! ~ ! - 123 [ "bar" and false ] ) , ! foo ( foo | foo ) or - - - foo ) ^ ~ ( - - ! foo ) ) , ~ - foo [ - false ] , [ - - false , ! false . foo , ! true , ! - 123 [ - foo ] , - foo ] ] ] >> false == ( ! ( - ~ 123 ) ) , ~ [ - ~ ! foo and ! ( ~ false ) ] << ! foo and true , 123 or false ] , false , ~ true , true and true , ~ true ( ) ) == ( true . foo ) ) ] , ! ! false , ( - ~ true ( ) ) ( false [ ! ! - ( - ~ - ~ - - [ ] ) and "bar" % true ] , true , ! - false ( true , ! ! ~ foo , - - ~ - false , - ! ! "bar" , 123 % 123 , ~ ~ ! false / 123 ) ^ ! - ~ ! ~ true , ! ! "bar" , ( 123 ) >> - 123 , false . foo or ! "bar" == true * ( ! foo and ( - ! - ~ ~ foo [ - - - "bar" ] - ( [ ] ) ) + ~ true ) << 123 ) ) ] , ! - ( [ - [ true , - "bar" and ! ~ ~ ! ! ! ~ "bar" ^ "bar" , - ( false ) and - [ ] , ~ "bar" [ - true ] != ! ~ ! ~ 123 [ - - ~ true . foo ] ] , true ] and ( "bar" ) ) < ! ( ( foo >= true ) < 123 + ~ false ) and ~ - "bar" >= ~ - true , - - foo ] or - false ] or true , ~ "bar" [ "bar" ] | ! ! - false or "bar" ] or foo ) ] , 123 ] ] ++ ;
 } ;
 } ;
 
