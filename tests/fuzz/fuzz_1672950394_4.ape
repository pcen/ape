module foo ;
 func foo ( ) int { } ;
 func foo ( foo int . int , foo int , foo int , foo int . int ) int . int . int { } ;
 foo : int . int = 123 ( ) + ~ ~ ! 123 << - 123 . foo and ~ ~ - true ;
 func foo ( foo int , foo int . int ) int { } ;
 foo : int : [ ] or - 123 ;
 func foo ( foo int , foo int . int , foo int , foo int , foo int . int . int , foo int ) int . int . int { foo : : true ;
 } ;
 foo : = false ;
 func foo ( foo int , foo int . int , foo int . int . int ) int { true ;
 } ;
 foo : int : 123 [ ~ [ foo , ! ( ~ ~ ~ "bar" ) , - ( ( ( ~ 123 ) << foo and ~ - ! [ ~ [ foo or 123 , ! ! ! ~ - ~ ~ [ ] >> ~ 123 != - ~ true , ! 123 , false or ( [ - ~ [ foo or [ ] , ~ ~ ~ "bar" and false , ~ true , true / ! ~ - foo [ foo ( ) ] + false , false or true ] ] ) , ( ! false or [ ! "bar" , ! ~ [ ] & [ [ ] , false < [ [ ] ] , - ! false , "bar" , foo / 123 ] , false != foo << ! foo and false , - ~ true , false ] ) ] ] * ~ "bar" ) or 123 ) , true and false ] + - false ] ;
 func foo ( ) int . int { } ;
 class foo { foo int ;
 func foo ( foo int ) int . int { } ;
 } ;
 func foo ( foo int , foo int , foo int ) int { } ;
 class foo { func foo ( foo int . int . int , foo int , foo int , foo int , foo int . int ) int { } ;
 } ;
 func foo ( ) int . int { } ;
 class foo { foo int ;
 } ;
 func foo ( foo int . int . int , foo int , foo int ) int . int { } ;
 foo : int . int . int : [ [ [ false . foo << [ - ! ! - ~ ! - "bar" , ! [ ] , "bar" , foo , - ~ true , - ~ ( ! ~ false or ! ! - - "bar" & foo ) and true ( ) ] , ~ ~ 123 + "bar" , ( 123 . foo ) ] , - 123 , "bar" , true [ true ( - ! false . foo , true , true / foo . foo ) ] ] < ! ( ~ ( "bar" ) > "bar" and ( ~ - 123 or "bar" << true ) ) << ! [ ] . foo ^ foo [ ~ ( 123 . foo ) ] , - false , ~ ! true ( foo and false , - - false >> ! true , - ! ~ - false . foo >> ! true , ~ ( ( 123 ( ! ! ~ ! ~ ! false , ~ - ~ ( ( [ ! - ~ "bar" - false ] ( "bar" & ~ ~ "bar" , - true == - ~ - 123 , - - - ~ ~ [ ] , ( 123 ( ) % ! ( 123 ) . foo ^ - ! "bar" ) ) ) . foo ) or ! [ ! ~ [ ! [ ] < ! ( - - 123 ) ] [ [ ] ( foo or 123 [ [ ] and ~ ( - - ! false and ( ! [ ] ) ) ] | - ! foo , 123 <= - foo , ( ! ~ - ~ ~ ( - - ! ! ! 123 < ~ 123 ) ) ) ] , foo ] ^ ~ - false . foo , ~ ! foo [ - true [ ( ! ! 123 - ! - [ ] ) ] >> ! [ 123 , ~ ~ [ false << ! ~ ! - ~ ~ 123 , [ ~ 123 , - - [ ] , ~ true , false >= 123 . foo ] and ! - true / - - ( ~ 123 and [ - false . foo > ! - - false . foo , false ( foo >= ( [ 123 , true and ! ~ - true or ! foo / true , true , [ ] and [ ] != ~ ~ ! - ! ~ true , "bar" , ! - false ] or ~ "bar" ) . foo % foo , true , ~ - ~ foo >> true [ ! ! false ] <= ( false + ( ~ foo ) . foo ) . foo , [ [ "bar" % ~ true , true , false , ! ~ true , ! foo and "bar" ] [ ( ( - true . foo >> ( ! false . foo ) . foo and true ) ) != false ] >= ~ foo , false ] , foo or ( foo != - ~ ( ~ [ ] >> ~ "bar" == [ ] ) . foo ) , ~ ! ~ ! [ - [ ] - foo and ~ ~ false / foo ] + "bar" ) , ~ - ~ [ - "bar" , true , true , ! ! ~ - - ! true , ~ false , false . foo ] ] ) ] and [ ] ( ) , ! foo == ! - - "bar" , ! ~ "bar" , ~ ~ false ] ] , ~ - ! "bar" != true [ ( ! ! ~ - ! true ) ( ) ] , ~ ! - - ( ~ - ~ ~ ( ! - foo or ! ~ - true ) or ! ~ true ) , ! ~ "bar" . foo | ~ ~ "bar" * ~ ~ false ) or - ~ - foo >= false [ - false ] ) ) , - [ ! - ! - [ - [ ] ( ) , - ! ! [ ] % ~ ( ! ! - ~ 123 [ - ! "bar" >> ~ - - true != false or ~ foo and foo ] ) >= ~ 123 , true [ true . foo ] != 123 ] , ~ "bar" , ! - ( ! 123 ) , 123 , [ ] , ( ~ "bar" ( [ ] or false and - ! 123 , ( - "bar" == - ! true << ! [ [ 123 or ! - - ~ ~ [ 123 . foo , - ~ foo ( 123 , - ~ 123 or true ) > ~ - "bar" [ true ] , ~ false and ~ ( "bar" . foo ) ( ) * false or ~ foo [ - - - ! ~ ( ~ ~ false ) | true ] , true . foo ] ] ^ ~ ( ~ ( ( foo and ( 123 & - ( ! ~ ( ! 123 ) ) ) [ ! - - - ! - - ! ! ~ true ] ) [ true ] ) ( ) ) == false , "bar" ] [ ( ( ~ foo ( ( [ ! foo , "bar" . foo / ~ ! foo , ! [ false or - ~ "bar" , 123 ( - [ [ ~ [ ] and [ ] != ~ - true , ~ "bar" and ! false or [ ] , [ ] and - foo , ~ 123 [ - ( true ( ) ) ] ^ - ~ false [ foo ] & foo ] == false >> foo , - [ ] [ "bar" - ~ ~ "bar" ( ) ] ] , - [ ~ ~ false | false , 123 and [ foo , true * ( ~ ! ! true ) , foo ] . foo , - - - [ ] ( ( [ ( [ - false . foo ] and ~ ~ ! ( ( ~ "bar" ) and ~ ~ [ ! [ ~ - [ [ ] or foo , ! ! ~ foo , - ( [ - ~ ! ~ "bar" , "bar" > "bar" ] ) or - ! ! ! ~ - - false , ( true >> ! false ) and "bar" , foo , foo ] or true , ! - false , ! foo , - - ~ ! false ] and false , ( false ) / [ foo . foo , ! - ~ ! [ [ ] , ~ [ [ ~ "bar" . foo or ~ true ( ) ] , true ^ foo , ! 123 . foo * 123 or ~ ! - ~ "bar" , false ] , - ( [ ] ) ] , - ~ "bar" ] , "bar" [ false ] , [ ] , ~ [ ] , - - ~ true != - 123 [ ( ~ 123 << - ! - foo ) + ~ [ ] ] and ! ~ "bar" ( ) ] ( ) ) ) , ! ( true ) and - ! false [ foo == [ [ ] , foo , false . foo and foo , [ ] ( ) , - 123 ] ( - ( - - 123 - - "bar" [ - true ] ) or ~ ~ foo ( 123 >= 123 , ! - ( true ) , ~ [ ] ( [ ( ! ! ~ ! "bar" . foo ) . foo ] , ~ ! ~ ~ false ( - false , false [ 123 ] << - 123 , ~ ~ true , 123 , ! ~ ~ ~ ! - ( ~ ~ false ) . foo ) , false , foo , - - - ~ ( - "bar" < false and foo ) ) , ( ! foo < - ! - - foo [ ( - [ ] ) ] ) , false . foo , - ~ [ ] ) , ~ - - ! ! 123 and ! ( - [ ] >= [ ] ) , ( [ ] ) , [ 123 and ( ~ - ( - ! - ~ "bar" != [ ] and - ! ! ~ ~ - ! - true << ~ foo ) ) , - false . foo , true [ [ ~ ( ! - ~ "bar" ) < false [ ~ 123 ] or true , ~ ~ 123 , - ~ ~ false ( true >> true , true ( ) , "bar" % - - - false >> true [ "bar" ] , - ~ ( ( true > ( - ~ false ) . foo ) % ~ - 123 ^ - foo ) ) , [ - ! - foo | ! - [ ] > false and "bar" ] ] [ "bar" ] or true ] or - ( foo [ "bar" ] ) >= - ! "bar" & ! 123 , ! false , [ - - true << "bar" % true ( ) , ~ ! - - true >= foo , - - ! ~ ! ! - foo [ 123 ] , [ ! ~ ( ~ ! ~ - - 123 ) , foo % foo or ! - - - ! foo ^ "bar" , ~ true ( ) ] ( ) ] < foo and [ "bar" , "bar" , - ~ true - "bar" ( foo , - false ( ) ) >= true , ( - 123 == ! - false and - - ~ - ( foo ) <= - - ! ~ ! foo ) ] or foo ] , - 123 ) ] , ! ! - ( [ ! - [ [ false ( ~ ( ! - false or false ) , [ ] , ! ! ! "bar" , ~ - ( - - "bar" ) , false and [ ~ - foo or false , - - - ( true ( 123 != ! ~ ~ - foo * 123 ) and ! ~ "bar" != ! - ( [ ] and foo ) & true ) , 123 , "bar" . foo , [ ! [ - ~ false , "bar" , 123 , true , true , ~ [ ~ ~ ! ~ [ [ "bar" , false , ! false [ foo << - - ! ( - ~ ( ! ~ false or ~ false ) ) | foo ] or ( true ) != ! ( - ~ false ) , - - [ ] , 123 or ~ 123 ] , true , - [ ] , false ] ] ] , ! [ - - ~ false , [ true and ~ ~ true , ~ ~ ~ ! ! ( ! ( false ) ) ] ^ [ ] >> - foo or - true and ~ ~ ! foo , ~ - ! ~ ~ "bar" [ foo ] , ! true . foo & false , false [ ! false / false or foo & ~ foo . foo ] , - - "bar" [ true ] ] ( [ ~ - - ~ ! 123 . foo != [ ! [ ] , ~ - [ ] ] , false >> ! "bar" ] , ! false , ~ - foo ) , foo ] . foo ] , ~ [ ] ) << - ~ 123 and ~ ( - ! "bar" ) | - ! ~ foo ] == ~ ! ( false ) [ ~ - ~ - ~ - - ~ [ ~ - ! "bar" , ! - ~ false % false | false or ~ - foo , foo * true ] [ - 123 % ! ~ [ false , ! - ~ ! false , ! foo or foo >> false , ~ foo . foo and [ foo [ false ] , ~ ( ~ ! false >= 123 or "bar" ) , true , ! - ( ! "bar" ) , foo >= ( ~ - - false ) ] , ! "bar" [ true < "bar" ] ] != ! ~ ! ( true . foo < ~ - - - true or ( true ) ) >> false ] ] % "bar" and ~ ! foo < ! "bar" , ( ~ ~ - ( "bar" or "bar" ) >= true ) or ~ - - [ false and - ! ! ! ~ ! ! [ ] ] , "bar" . foo and ~ 123 , ( "bar" + - [ ] and ! false & "bar" ) [ foo == ( ~ ~ foo ) ] , [ false ] , ~ ( true ( ) ) << "bar" + ! - - - ! - ~ [ ] . foo ] and false , - ~ ! 123 , ~ ( ( ! true . foo ) ) ] or foo ) , - foo [ - "bar" ] , 123 ] or ~ ( ~ ! 123 . foo and ! false . foo ) . foo ) or - foo and true , ~ - - ~ - ! false ) and ( ~ ! ( true ) ) - ( ! [ false [ ~ foo ] | ( false ) [ ! ! ~ - 123 ] ] + ( [ ] ) ) , ( ~ - 123 ) , - false ( false , - ( - foo ) , 123 , ~ ~ false , 123 > ! true or ! - - false [ [ ] ( ~ ! false , false == ~ true , - [ ] and ! false | - [ ] , [ ~ ! ~ false == foo and ~ [ ! ( foo ) ( ! 123 , - - - - - - "bar" , ! true or ~ [ "bar" or ! ( ! 123 ( false , [ ( ( [ - 123 , "bar" , ! ( foo and ~ [ true , true [ false and true < ! false - ~ true . foo ] , ~ "bar" , - true , false > ~ ! ! - ~ - ( ~ ( 123 ) . foo ) , - ( [ ] ) ] ) and ~ "bar" . foo , ( - false [ [ ] ] and [ - ( ! ~ false | ~ ~ 123 ) , false ( ) and ( foo >> ! [ ] ) . foo , "bar" , foo ] or foo ) ] ) . foo ) , ! false ] ( ~ "bar" [ ( [ ] ) . foo < "bar" ] , ! - true . foo >= 123 ( [ [ ] , ! - ~ true ] , foo % true , ~ ~ ~ ~ [ ] , [ ] , ! ! 123 ( false , 123 [ - ! [ ( ~ "bar" <= ( foo ) ) ] + - foo . foo ] == - false / ! ~ "bar" , ~ true != ! [ foo . foo , ~ foo , 123 ] , [ ] [ ! 123 ] , ! ! ! ! "bar" , ! ! - ~ - - - [ [ ] ] >> true and 123 ) ) , [ - [ [ "bar" ( "bar" , false ^ ~ - - ( - false ) and ~ 123 << ~ ~ foo [ ~ 123 and - [ ] ] , ~ false , true + ~ ! ~ ~ [ ~ [ - ! [ ] , ( foo ) and - foo , ~ ~ "bar" , ~ - 123 <= ( 123 ) , ! foo , 123 ( ) ] ] ) , "bar" , ~ ! - ~ - [ [ ~ ! - ! ! foo , ( true != - ~ ! 123 ) / true , false ( ) , true , ~ - ! foo ] , ! ~ - ! [ ] or ( - ~ ( ( - - ~ true [ foo ] ) ) + true . foo ) , foo , 123 , "bar" , ~ ~ ( ! ~ - true or ~ true ) . foo ] [ foo == - ~ ! ! - true ] * [ ] , foo ] . foo , ~ ~ ~ true ] ( ) >= - [ ] - "bar" ] [ ! true ( ) ] ^ false ( ) ) , ~ ! - ~ ~ true , ~ - 123 ( - "bar" , false and "bar" != ( [ ] ) , true , ! true , 123 , ~ 123 or [ ! ( - ( - "bar" ) ) , [ ] ( ~ ~ - true , true , ! ( [ 123 and - [ false ] , - ! false , ~ ~ ! false , "bar" ( false + false , foo or "bar" . foo ) / ( true ) ] ( ) ) . foo , ! - foo , true / ( ~ "bar" ) ) ] ) or foo , ~ [ [ ] , - ~ "bar" , ( "bar" != [ ] ^ true ) , - - [ ] , false ] , ! 123 / ~ ~ "bar" [ foo << ~ true ] ) ) , "bar" ( ) * ~ false , 123 != ( "bar" ) ] , ~ [ "bar" , 123 , - foo >> true , false , - - ( ~ ! ! ( - ( 123 ) ) != true < ( true > ~ ~ false ) ) . foo ] [ foo and false or [ [ ] ^ ! ! foo ] ] , - ~ - foo != ! foo , 123 ) , - false . foo % "bar" , [ ] [ foo ] ] ( ) >> false [ - ! foo [ - foo + 123 [ - ! - ! - false . foo != foo ] ] ] , - 123 * - 123 [ true & 123 ] != ( ( ! false ) [ - false ( true != ( foo and "bar" ) , ~ true ) ] ) . foo ] ( ) > ! ~ 123 * ! - ! 123 [ - foo or ~ ~ - foo ] , ! false . foo or - "bar" ) ] ) ] , [ ] ( ) , ( ! true ) or false & ( foo ) < false & - [ ] [ false [ ( ~ false ( - ! ~ ( ~ foo ) ) ) [ [ ] [ false - foo and [ ] or ~ foo == foo % 123 ] ] ] ] , - true , "bar" ) <= [ false , true ] , true ] . foo + 123 , true ] or [ ] ) and - ~ - ! - - - - "bar" << ! true . foo , ! "bar" [ ~ - ~ ~ true ] ) ) ( "bar" ( ) << ( - 123 | ~ ! true ) ) ) ( ( ! 123 == "bar" ) , false , - true . foo , 123 , ~ ~ foo , - - ! "bar" ) ] ) ( ) >= foo != false . foo , ~ true or "bar" and ~ ~ true ) or foo >> - ~ true ) or true ] , 123 ) , ( ! - [ - "bar" == ! 123 , 123 , "bar" ] * ! false ) or false , ~ ! ~ - - ! 123 [ - ! ( ! ~ foo ) ] ] << ! ! ! ! "bar" ;
 func foo ( foo int , foo int , foo int , foo int . int . int , foo int . int . int ) int { } ;
 foo : : ~ - [ ] == foo [ false - true [ ~ ~ 123 ] & 123 and "bar" ] ;
 foo : = ~ - ! true ;
 
