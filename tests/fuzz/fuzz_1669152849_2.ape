module foo ;
 class foo { if "bar" [ - true ] == true . foo { for val foo int . int = ! false ( ) < ~ true - "bar" ;
 false ( ( foo ) , 123 . foo ) ;
 - false { 123 -- ;
 } ;
 } else { ! ! - ~ foo ++ ;
 } ;
 } ;
 class foo { ~ ! 123 = - ~ false - ~ ~ ( 123 ) ;
 } ;
 func foo ( ) int . int . int { ! ( ~ false ) **= foo ;
 } ;
 func foo ( foo int . int . int , foo int , foo int ) int { foo -- ;
 } ;
 class foo { false ( ) ;
 } ;
 val foo int = "bar" ;
 func foo ( ) int { 123 . foo -- ;
 } ;
 class foo { for var foo int = ! ! ( ~ ~ ! 123 . foo != ~ foo . foo ) ( - ! true , ! ( - ( - - ~ ! ! - 123 . foo ) ) ) | ( - true & - ~ ~ "bar" ( false [ foo / - 123 [ 123 != ~ ! - 123 > ~ true ] != "bar" ] , - - ~ - 123 . foo ) < - ! false / ! ( ! foo < "bar" [ "bar" . foo ] != ~ true ^ 123 ) ) ;
 - true . foo ;
 - 123 . foo **= foo { for val foo int . int . int = - "bar" ( - ! ~ ! true > - - ~ ! foo [ - ! false [ ~ ! ! true [ ~ 123 * - false . foo ] * foo ] ] , false + true <= ! foo [ false [ - 123 . foo ] ] ) <= ~ ~ - true . foo ;
 "bar" [ ! ~ - true ] == ( true == ! ~ ~ true ) ;
 ! 123 -= - ~ ! "bar" ( ) { true ;
 } ;
 } ;
 } ;
 class foo { if ~ ~ ! ! - "bar" { true **= ! ! - true ;
 } else { ( ! ~ - foo / ~ foo >= - - "bar" ) ;
 } ;
 } ;
 var foo int = true [ - ! foo * ! ! - false ] ;
 func foo ( ) int { foo & true ;
 } ;
 func foo ( ) int { "bar" = - true ;
 } ;
 var foo int = 123 - "bar" > ( ! true ) [ ! ~ false == "bar" . foo ] ;
 var foo int . int = true [ - - false ( ) ] ;
 class foo { for var foo int = true ;
 ( ~ - ! "bar" ^ ~ ! - ( ( ( true ) ) / ! "bar" ) ) ;
 false | 123 /= ~ ~ foo { if ! 123 { for var foo int = "bar" . foo + foo [ 123 [ true * ( true ) ] ] ;
 false ;
 123 ( ! ! false ( ) , ! ! "bar" ) { if false >= false { for var foo int = - - - foo ;
 false ;
 "bar" [ ~ - ~ false ] = foo [ true [ ~ ~ ! ~ false < ~ foo [ ! "bar" ] ] ] { for val foo int = ~ foo ;
 - 123 ;
 123 **= ! "bar" { if ~ ! ! ! foo { - true ( ) & foo ( true , true [ - ! false ] == true [ ! foo ] ) -- ;
 } else { ~ 123 **= - ! ~ ( - true ) ;
 } ;
 } ;
 } ;
 } else { ~ false == 123 ++ ;
 } ;
 } ;
 } else { for val foo int . int = foo [ ~ "bar" > "bar" ] == foo ;
 ~ - false ;
 true -= ! - true { ~ ! true ++ ;
 } ;
 } ;
 } ;
 } ;
 var foo int = 123 ( ) ;
 func foo ( ) int { foo != "bar" ++ ;
 } ;
 class foo { true -- ;
 } ;
 class foo { - ~ ! ~ - true -- ;
 } ;
 val foo int = ~ ~ 123 ;
 func foo ( foo int . int , foo int . int . int ) int { ! ! ! true [ false ] += ! ! 123 != false ;
 } ;
 class foo { for val foo int = foo ;
 foo != ( - foo ( ) ) | - "bar" <= ~ ! foo + ( - ! ~ true ) . foo ;
 - foo { - false ++ ;
 } ;
 } ;
 class foo { if "bar" > ! "bar" [ - true ] { ~ ! 123 ++ ;
 } else { foo ;
 } ;
 } ;
 var foo int . int = "bar" . foo * foo + 123 ;
 class foo { for val foo int = ! ! ~ ! ! true [ - true [ ( ! foo ) - foo ] ] | ! ~ - 123 [ true ] ;
 "bar" [ true ] ;
 ~ ! ! false -- { true != ~ foo ;
 } ;
 } ;
 func foo ( ) int { ~ - ! ~ "bar" | ! ( "bar" <= ~ 123 [ ! true ] ) /= foo ( ) ;
 } ;
 func foo ( ) int { for var foo int = false ( false , ! - false ) & ~ true ( ) ;
 true ;
 ( 123 ) -- { for var foo int . int . int = false . foo ;
 - 123 ^ "bar" [ ! false ( ( ( - 123 | false / false == ! true ) ) [ 123 ( ! ! ! - ! ( true - ! - ! ~ - "bar" [ 123 ] ) , ~ ~ ~ 123 * ( "bar" ) . foo ) ] , ~ ~ ~ ~ - foo ) ] ;
 "bar" ++ { true ;
 } ;
 } ;
 } ;
 class foo { if ~ ( - true . foo / ( ! true < "bar" ) ) { if foo . foo == false ( true , "bar" ( ! ~ ~ - "bar" , ~ foo ) <= 123 ) { "bar" -= ( false [ false [ ~ foo ] > ! false != - ! ! - ~ ~ ( ! ( ~ ! 123 ) ) ] == ! ! foo ) . foo < true & ~ - ! false ;
 } else { - - ~ ! ~ ~ false & ( false & - ( false ) ( false , - ! - "bar" ) ) -- ;
 } ;
 } else { true ( ) = false == ( ~ - ~ "bar" ) ;
 } ;
 } ;
 class foo { ~ foo ;
 } ;
 func foo ( ) int . int . int { if ~ - ~ ! ! - - ~ ~ ~ "bar" . foo * "bar" ( ) { ~ ! 123 ;
 } else { ! "bar" *= ! true ( ( ~ - "bar" ( ) <= "bar" ) - ( ! ! ! true ) , ! true ) & ! - foo [ - ! ! false ] ;
 } ;
 } ;
 var foo int = ~ - ~ ( ! ~ ~ true ) ;
 var foo int . int . int = - ~ ! foo ;
 func foo ( foo int , foo int , foo int , foo int ) int . int { for val foo int . int . int = false ;
 ! "bar" / ! ~ ~ - ~ ! ~ 123 . foo ;
 ~ true [ false ( ) ] <= ! ( ( ( ! ! ~ ~ - ~ false ) . foo ) ) { ~ foo [ false . foo < ! - ~ "bar" & ( - false ( ) ^ - - false ( 123 - 123 . foo , ! false > - - ! true [ ~ 123 ] ) != ! - false ) ] ;
 } ;
 } ;
 val foo int . int = ! "bar" ( ) ;
 func foo ( foo int , foo int , foo int , foo int . int . int ) int { if ! "bar" { if foo ( ) { for var foo int = ! - "bar" - false ;
 ~ ( false != - ! ! true ) . foo ;
 ( - ( ! - ! - foo ) + 123 & true ) -- { ! ! - true | ! false ;
 } ;
 } else { ! ~ false [ ~ "bar" * foo [ - foo | - foo ] ] ++ ;
 } ;
 } else { ~ ~ 123 . foo | false ( ) ;
 } ;
 } ;
 class foo { false ;
 } ;
 class foo { "bar" [ "bar" [ ! true != ! ( 123 ( ! false > - ! - - true , "bar" ^ ( - foo ( - ( ( true . foo >= ~ ! ! ~ - ~ foo ) ) , ~ ! foo == ~ - ~ ( - "bar" / ~ ~ "bar" <= "bar" ) ) ) ) ) [ ! ! ~ "bar" [ ! ! ! foo == ! - ( ! - "bar" ) ] ] ] & false ( - ( false ) & - 123 , false <= false ) ] -= "bar" * ! true ( true , - ! - ( - ! ! - "bar" [ false ] > false ) ) >= ( ( ! foo ) ) | 123 ;
 } ;
 val foo int = false . foo ;
 func foo ( foo int . int , foo int ) int . int { for var foo int = ( ~ ~ ~ foo ) ;
 ~ "bar" . foo / ( - - ~ ( - foo ) ) ;
 foo - 123 ( 123 ( ) , ! true ) == ( ! false . foo != true * ( ~ - false ) ) [ - 123 & ~ "bar" [ ~ foo ] ] -= - ! ~ ( ~ ! "bar" + ! - - - foo != ( false ( true , ! foo ) ) ) { if foo { for val foo int . int . int = - ~ ~ 123 ( ! ! ~ ( ~ 123 > false ) * 123 , ! "bar" [ false ( ) ] ) ;
 true [ false ] ;
 - "bar" [ ! ~ - false ( true , "bar" [ ~ 123 ] ) == "bar" ( "bar" [ ( "bar" ) ] , - 123 ) ] -= foo { for val foo int = ( ~ ! - "bar" & false . foo != ~ - ~ ~ "bar" ) ;
 false ( ( - true | ~ true ( ) ) , foo ( ) ) ;
 ( foo ) { if "bar" >= 123 { false ;
 } else { - foo > 123 [ ! - foo ( ) ] ++ ;
 } ;
 } ;
 } ;
 } else { ( true | true ( foo . foo , ~ foo - ( ~ true [ false ] ) ( "bar" | ! - "bar" , 123 != - ~ 123 ) ) ) | ! - - "bar" ( ) /= 123 ;
 } ;
 } ;
 } ;
 class foo { for var foo int . int . int = ~ - 123 ;
 ! foo . foo != ~ foo ;
 ! ~ ( 123 ) . foo -- { for val foo int . int = false - true ;
 foo ;
 true { ( foo . foo ) . foo ;
 } ;
 } ;
 } ;
 func foo ( foo int . int , foo int , foo int ) int . int { for val foo int = true . foo ;
 ~ ! ~ 123 ;
 ! - ( - false . foo ) { if "bar" { ~ ~ - - ! "bar" -- ;
 } else { for val foo int = - ~ ( false ) ;
 false [ foo ] ;
 - ~ true ( 123 . foo , ( ! - ~ "bar" ) ) += - - ~ - - 123 . foo { ! ~ true == - "bar" [ foo ] ^ ! - false ;
 } ;
 } ;
 } ;
 } ;
 var foo int . int = ~ ~ - ! false ;
 class foo { if - ~ ~ ( ~ 123 >= foo / ~ 123 [ ! ~ ! "bar" . foo ^ 123 <= "bar" ] ) { for var foo int = - 123 * ~ ~ ~ ~ ( ! foo == "bar" ) ;
 false * false ;
 123 -- { for var foo int . int . int = ~ "bar" . foo ;
 - ! foo [ 123 ] & - false - ! foo == "bar" ;
 - ! foo [ "bar" ( 123 != ~ ! ! true . foo , ~ - ~ ! false ) ] -- { "bar" & ! 123 . foo **= - ! - ~ ! ! false ;
 } ;
 } ;
 } else { ! true -- ;
 } ;
 } ;
 val foo int . int . int = true + ( ! 123 . foo ) ;
 var foo int = ( ! "bar" ) ;
 var foo int = ( false ) [ - "bar" < ~ - ! ! "bar" & - 123 == "bar" | false . foo ] ;
 val foo int = ~ ~ ! ! 123 ;
 func foo ( ) int { ! - "bar" [ "bar" . foo != foo [ foo | ( ~ ! ! ! ~ foo . foo + foo ( ! 123 . foo == - "bar" , 123 . foo ) ) ] ] <= false != ~ "bar" **= - "bar" != ! 123 ;
 } ;
 
