module foo ;
 func foo ( foo int , foo int , foo int , foo int , foo int ) int { } ;
 class foo { func foo ( ) int . int . int { } ;
 foo int ;
 } ;
 func foo ( foo int . int , foo int ) int { if ~ - ! false | - ! ! true . foo { val foo int = ! false ;
 } else { } ;
 } ;
 val foo int = false ;
 class foo { foo int ;
 func foo ( ) int { ! - foo ;
 } ;
 func foo ( foo int . int , foo int , foo int . int , foo int , foo int , foo int . int . int ) int { } ;
 } ;
 class foo { func foo ( foo int , foo int . int . int , foo int , foo int . int ) int { } ;
 func foo ( ) int . int . int { } ;
 foo int . int ;
 } ;
 val foo int = ! true [ - ~ ! false ] and true + ! ! ! - ! true or true ^ true ;
 func foo ( foo int . int , foo int . int , foo int , foo int , foo int . int . int ) int { 123 -- ;
 } ;
 val foo int = 123 ;
 func foo ( ) int { } ;
 val foo int = - ~ false ;
 class foo { func foo ( ) int . int . int { } ;
 func foo ( foo int , foo int , foo int , foo int , foo int ) int . int { } ;
 foo int ;
 } ;
 func foo ( foo int . int , foo int ) int { } ;
 var foo int . int = [ ] [ ! false == ( - ~ "bar" ) . foo or ~ ~ "bar" and ! [ ] ] ;
 val foo int = ! ~ 123 ;
 var foo int . int . int = - ( ( ~ ( false ) [ "bar" % ! - "bar" ] ) / false ) ;
 var foo int = 123 ;
 func foo ( foo int , foo int , foo int . int ) int { } ;
 val foo int = - foo != - 123 ;
 class foo { func foo ( foo int , foo int . int . int , foo int , foo int , foo int , foo int ) int . int { 123 << - ( [ ~ "bar" > ~ ! - ! ! 123 , ~ "bar" , [ "bar" or ! - ~ ( 123 ) and 123 [ true ( ) ] , - [ ] and ~ ~ false != ! ! - true ] or 123 , ~ 123 >> - - ! 123 , ~ ( - foo ) , - ~ ~ [ ] ] == ! ! ~ "bar" ) %= false < ( ~ - "bar" or foo >> ! ~ 123 ) ( true , - 123 or 123 ) ;
 } ;
 func foo ( ) int { } ;
 foo int ;
 foo int ;
 foo int ;
 } ;
 var foo int = "bar" ;
 class foo { foo int . int . int ;
 func foo ( ) int { } ;
 foo int ;
 func foo ( ) int { if - - true { } else { } ;
 } ;
 foo int ;
 } ;
 class foo { func foo ( ) int { ! [ ~ ~ "bar" , "bar" and ~ foo [ - foo ( ) ] & "bar" , 123 , "bar" ] ;
 } ;
 func foo ( foo int . int . int ) int . int . int { ! ~ foo %= 123 ;
 } ;
 } ;
 func foo ( ) int { } ;
 val foo int = 123 ;
 func foo ( foo int , foo int , foo int ) int . int { } ;
 func foo ( foo int , foo int , foo int , foo int , foo int ) int { if 123 ( - ~ foo & foo [ true >= ~ ! ! - - ~ ( "bar" ) [ 123 ] or ~ false and true [ 123 ] ] , "bar" != ~ ~ - ~ - ! "bar" , - false , ~ foo << true [ - ~ "bar" ] , ! ! ( false . foo ) , - [ ] or true != "bar" ) <= 123 { val foo int = foo ;
 } else { } ;
 } ;
 func foo ( foo int ) int { val foo int = false ;
 } ;
 func foo ( ) int { } ;
 class foo { func foo ( foo int , foo int , foo int , foo int . int . int , foo int . int . int ) int { } ;
 func foo ( ) int . int { } ;
 foo int ;
 func foo ( foo int , foo int . int . int ) int . int . int { } ;
 foo int ;
 } ;
 class foo { func foo ( foo int , foo int , foo int , foo int , foo int ) int { } ;
 foo int . int . int ;
 } ;
 func foo ( ) int { } ;
 func foo ( foo int . int . int , foo int . int , foo int , foo int . int ) int { } ;
 var foo int . int . int = false ;
 val foo int . int = 123 [ ~ ~ true . foo | - ( - - ~ 123 ) and ~ [ ! ! [ ! - true and - ( true ( ~ ~ ! - false <= - ! - ( 123 ) , true , - ~ 123 , "bar" , 123 ) ) ( - false ) | [ ( ! true ) ( false , foo ) ^ true . foo and ~ - 123 , [ ] , false , - [ ~ [ ! ! false or 123 , foo < ~ "bar" & - ! 123 , ~ [ 123 and - - [ ( "bar" . foo ) >> - - 123 , ! - foo , false and foo , ! - ( - false or ! - - ( - ~ - ! - true ) ) ] , foo , foo , ~ true , "bar" ] . foo , [ 123 , - true ] , foo ] , foo % ! 123 [ "bar" . foo ] , ! "bar" or foo ] , ! ~ ( false ) ] >= ~ - ! 123 & ~ [ ~ ~ ~ - foo [ 123 ] % "bar" and [ ] [ ( - true == ~ ~ ~ ! foo ) ] , ~ ! ( ~ ! ! foo ) , ~ ( ( - 123 . foo and true ) and ! true or ~ "bar" ) [ - 123 . foo ] | ( ~ ~ [ - - ! 123 == [ foo [ true ( ) ] , 123 << 123 , true ] >> 123 * false and foo , false or 123 ] ) , 123 [ ~ ! true != - foo ] , ! foo / "bar" and foo ] ] , foo or - false , ( false [ "bar" >> - "bar" ] ) < ! foo or "bar" , false >= [ ] . foo ] ] - true ;
 
