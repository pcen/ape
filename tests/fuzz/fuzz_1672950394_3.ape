module foo ;
 class foo { foo int ;
 func foo ( foo int . int . int , foo int , foo int . int . int , foo int , foo int ) int { } ;
 foo int . int ;
 func foo ( ) int . int { - ( foo ) and ( - "bar" ) [ - ! - ~ ! "bar" ] | - foo ;
 } ;
 func foo ( foo int , foo int . int , foo int ) int { foo : int . int : ! ( "bar" ( ) ) % true ;
 } ;
 } ;
 foo : : ! ~ "bar" << - - ! [ ~ true , true - ~ ( ! "bar" ) , false and ! [ false and ! - - ! [ foo , true , ! ! ( - ! ( foo and foo / [ ~ ! - false and [ "bar" or true . foo > 123 , ! true , foo and ~ ~ - false or - true - ~ false and - ~ "bar" . foo , - [ - false or foo ( ) , true , ! 123 , 123 ( ) , ~ ! true or ~ foo ( ) , - [ [ ~ - ! ! - "bar" [ ~ "bar" % "bar" ] , [ ] , [ ( ! ( false ( - [ ! ! 123 , ! [ ] , ~ ~ foo , [ ] , ~ [ ] < ! ( [ ~ ~ ! ~ ! 123 > ~ - [ ~ 123 + ~ ! ~ 123 ] ] [ true ] ) ] ( ) , true , ( 123 ) , [ ] >= ~ ! [ ] ) or ~ ~ ~ foo == - [ ] ^ "bar" [ ! - true ( ( true != "bar" ) , 123 / foo , ( 123 << [ - - ( - - 123 == ! true << foo . foo ) , ! ~ ( 123 ) ] ) / false ( 123 and false [ [ - ! - true and [ ~ 123 , - foo ( ) != foo , ! ! true . foo != ! ~ "bar" ] , ! - "bar" ] ] ) , ! ( "bar" ) ) ] << ! foo ) ) [ ~ "bar" or ! foo ] , - true >> ~ 123 ] ] , true , 123 , 123 ] . foo == ( foo ) [ "bar" ] ] . foo ] ] ) >> true and - false ) & ! ~ ~ foo , ( ~ ~ true and - false ) , foo , 123 or 123 ] , 123 , ! ! ! ! [ ] - ~ ( ~ false . foo ) , ~ - true ] , [ ] . foo , [ ] , true ] ;
 foo : = false or false ( ) ;
 func foo ( foo int . int . int , foo int , foo int , foo int . int . int ) int { ~ ~ ! ~ ! ! ( ! [ ] ) [ foo ] and ! ! true += "bar" ;
 } ;
 foo : int . int : ~ foo ;
 class foo { foo int ;
 func foo ( foo int , foo int , foo int ) int . int { foo : : ! ~ false - ! ( 123 ) ;
 } ;
 func foo ( foo int . int . int , foo int , foo int , foo int ) int { } ;
 foo int ;
 } ;
 class foo { foo int . int ;
 } ;
 foo : int = - "bar" != foo ;
 foo : : foo and - false ( ~ - [ ] , - true and ~ ! false ( - ~ - - - 123 / - - - "bar" and - foo . foo or ~ ~ foo , false , "bar" ( [ ~ false - - - ! false , ( foo ) , ( ! [ ] ) , false [ ~ ~ foo ] - "bar" % [ ] ] and true ) , false , true ) ) != foo ;
 class foo { foo int . int . int ;
 func foo ( ) int { if "bar" { } else { } ;
 } ;
 func foo ( ) int { } ;
 func foo ( foo int . int . int ) int { } ;
 func foo ( foo int . int . int , foo int . int , foo int . int . int , foo int . int , foo int , foo int ) int . int . int { } ;
 } ;
 class foo { foo int . int . int ;
 } ;
 foo : int : - ~ "bar" ;
 foo : = ! true ;
 foo : int : - - ( - ~ ~ foo ( ( 123 % "bar" ) , "bar" , true , ~ ~ foo ( [ ] <= ! ~ 123 , ! ( [ ] != - - ! foo >> foo ) or "bar" & - ! - true == true - - ! ( ! ~ false ) [ ~ 123 ] , ( ( - ~ ~ ~ ! ! [ ~ - true [ ~ ~ foo [ [ ( - ! - foo / false ) , ~ true ( ! 123 , ! ! ! ( [ ~ - ~ 123 and 123 + "bar" or 123 , false , 123 , ~ "bar" << "bar" ( ) , false , 123 ] << ~ ~ ( foo [ [ ] and true [ ~ ! [ false , [ ~ 123 [ true < foo ] ] and true , true , ! 123 or ( foo ) ] ] ] >> - ( ~ true and false ) ) != ~ foo ) * true ) or ! true , - [ "bar" , 123 ] [ 123 ] ] != false [ 123 or ! 123 ] ] ] % - 123 ] ) . foo ) , ~ [ foo ( ) >= true << "bar" != "bar" [ ~ - "bar" or true ] and foo , ! ! false and true % "bar" - - false . foo or ( foo ) , true << ! - 123 . foo , - foo ( true ) ] , - ! 123 ( ) and "bar" , true & 123 ) , ( 123 ) ( [ - ( false ) , ~ ~ ~ ! ~ ! ! true , false . foo ] ) , ! ~ false [ false ] ) ) ;
 foo : int = ! ! [ - foo ] . foo & ~ ! [ ! false >= ! 123 , ! false . foo & ! ~ 123 or 123 == ~ - ! - - ( ( - true & 123 ) ) , true & ~ ! - ~ true > - 123 , ! 123 ( ) ] ( [ true ( ) , ! foo , [ ] or ~ ! - ~ foo . foo % [ ] , foo >> ( true ) . foo , true + - ! "bar" . foo ] . foo , ~ ( - foo ) + true ) ;
 func foo ( ) int { "bar" <= 123 and false ;
 } ;
 foo : : foo [ true ] ;
 func foo ( foo int , foo int , foo int , foo int , foo int , foo int ) int { if ! false { } else { if ! true { } else { - ! ! - - - - - false or foo ++ ;
 } ;
 } ;
 } ;
 class foo { foo int ;
 func foo ( ) int . int . int { foo : : - ( [ ] >= true ) ;
 } ;
 } ;
 class foo { func foo ( ) int . int . int { } ;
 foo int . int ;
 foo int . int ;
 } ;
 foo : : 123 ;
 class foo { func foo ( ) int { } ;
 foo int . int . int ;
 } ;
 func foo ( foo int , foo int , foo int , foo int , foo int ) int . int { } ;
 class foo { func foo ( ) int { foo : = ( ~ ~ ! [ ] ) ;
 } ;
 } ;
 class foo { } ;
 func foo ( foo int ) int . int . int { } ;
 
