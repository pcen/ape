module foo ;
 class foo { if ( foo ) & - - - ~ false { for var foo int = ! ~ ~ true & ( ! ! 123 ) ;
 ( - - - true ) ^ - ~ - ! foo ;
 ! false ++ { "bar" -- ;
 } ;
 } else { if true ( - foo . foo , ~ "bar" ) { ~ true ;
 } else { if false { ! ( ! - false >= ~ - - ! 123 ) ( ) + ~ - 123 = ! ~ ( false ) ^ foo ;
 } else { if ~ "bar" . foo { for var foo int . int . int = ( "bar" . foo ) == foo ;
 - foo / "bar" | ~ ~ "bar" . foo ;
 - true / ~ 123 ( ) { true [ true != false | ( foo ) >= 123 ] -= ! - - ~ - "bar" ;
 } ;
 } else { - "bar" & - true ( ) += "bar" ;
 } ;
 } ;
 } ;
 } ;
 } ;
 class foo { ! 123 **= - ~ ( "bar" [ 123 ] != - ~ ( ~ "bar" [ "bar" ] & false >= - foo [ ~ ( false . foo ) [ - ~ ( foo [ ! "bar" ] <= ! false ) ] + ~ false ] ) < ( false + false == ! ( - "bar" ( ) ) <= foo ) | - 123 ) [ 123 . foo != 123 ] ;
 } ;
 class foo { ( ~ false ) ++ ;
 } ;
 val foo int . int = ( ! true / foo ( - ( true ( ) * foo ( true , foo == ~ false < ! - foo . foo ) ) , - foo . foo ) ) == false ;
 func foo ( foo int , foo int , foo int , foo int , foo int . int . int ) int { if - 123 { if 123 == foo [ false != - foo ] { ~ foo ++ ;
 } else { ~ ~ ~ false == - true *= ( true [ foo . foo <= ~ foo ] ) != foo ;
 } ;
 } else { for var foo int = true . foo ;
 foo != true [ ! ~ - ! ~ ~ foo != ~ false [ - ! ~ - - - ~ true ] ] ;
 foo < false { for var foo int . int = - "bar" . foo * "bar" ^ ! ~ 123 ;
 true == ~ true ;
 ! ~ ~ ! ! 123 **= false { - true ( ) * ! ! false == foo ^ false [ - foo . foo >= ( 123 ) ] ++ ;
 } ;
 } ;
 } ;
 } ;
 class foo { for var foo int = ~ foo ;
 ( ( foo ) / 123 ) - ~ 123 != ~ "bar" ;
 false { for var foo int = ! ~ foo ;
 ~ foo + foo ;
 - 123 . foo ^ ! ~ "bar" . foo != 123 -- { - ! ~ 123 = - false [ ! 123 ] + ! false [ false ] ;
 } ;
 } ;
 } ;
 class foo { 123 [ 123 ] ;
 } ;
 func foo ( ) int . int . int { - - foo ;
 } ;
 class foo { ~ "bar" * 123 = true == 123 ( ) > - ~ true ;
 } ;
 val foo int = - true ;
 class foo { for val foo int = ~ ~ "bar" ^ ~ - true ;
 false / true ;
 true ++ { false [ ~ ~ foo ] ^ ! ! 123 ;
 } ;
 } ;
 func foo ( foo int , foo int . int . int , foo int . int . int ) int { 123 ( ~ ~ ~ 123 & ( 123 ) , foo != ~ ~ ( ! true ) ) ;
 } ;
 func foo ( ) int { - - ! foo != ( foo . foo ) . foo - - ! ( ~ foo & - true ) ;
 } ;
 var foo int = ! ~ ! false ;
 func foo ( foo int ) int . int { for val foo int = true - - ( foo . foo + ! "bar" ) ;
 123 - 123 ;
 ~ 123 /= ( ~ - false == true [ true . foo ] & - foo ) { ( false [ - ! ~ false <= 123 * ~ true ] - ~ ~ true [ - "bar" . foo ] & foo ) -- ;
 } ;
 } ;
 func foo ( ) int . int { for val foo int = - true . foo & - ! 123 ( ) ;
 ! ~ 123 == ! 123 ;
 ~ 123 [ ( 123 ( ) * ~ ! ~ true [ - ! ! 123 ] != "bar" ) ( ) & 123 ] { if foo { - 123 ++ ;
 } else { if false { for var foo int = ~ ~ ! ~ ! ! - false ;
 - ~ - - ! true ;
 false . foo | true { if true * true ( true , false ) { if foo == foo { for var foo int = ! false . foo ;
 ( foo ) ( ) > foo ^ - ! - true ;
 foo > "bar" ++ { for val foo int = ! ! ~ - ( 123 != ( ! false . foo ) & ! ! "bar" ) ( true , false <= false ) ;
 "bar" ;
 false - - ! ! ! ( - "bar" ) **= "bar" < - foo - ! - 123 { for val foo int = ~ ! ~ foo . foo ;
 ! false + - - ! - 123 ;
 123 . foo = ~ foo { for val foo int . int = ( - true ) <= ! true ;
 ~ - ( foo <= - false ) ;
 ~ ( ~ ! ( foo [ ! true != foo ] ) ) ( ) **= - ! 123 >= ~ ! false | ! 123 { for var foo int = true ;
 ! - ~ false ;
 false - ~ ~ true ++ { "bar" ;
 } ;
 } ;
 } ;
 } ;
 } ;
 } else { - ! ~ ( true ) [ false ( ) ] ;
 } ;
 } else { "bar" ( ) -= false ;
 } ;
 } ;
 } else { foo > "bar" == ( "bar" ) += ! "bar" ( ) / ~ 123 . foo ;
 } ;
 } ;
 } ;
 } ;
 func foo ( ) int . int { if ! ! foo . foo { ~ - ! foo <= ( - ~ foo . foo ) + true *= ( "bar" [ 123 == foo * - false [ ~ "bar" ( 123 , - ! true ) / true ] ] ) ;
 } else { for val foo int = ( ! ( ~ true ) <= ! - foo == ~ 123 [ ! true == ~ ! ! ! false [ "bar" ] ] ) ( true & foo . foo , false > "bar" == ! ( - "bar" ) ) - foo ( "bar" ( ! ( ! ~ true ) / ~ ! ! foo , foo ) , ! "bar" . foo > - 123 ) ;
 - ! foo [ ~ ! ~ false != - foo ] ;
 true = foo + ! ! true { - "bar" != - ! "bar" ;
 } ;
 } ;
 } ;
 class foo { ! ~ foo ;
 } ;
 func foo ( foo int . int . int ) int { - 123 *= - foo ;
 } ;
 val foo int = ( ~ ! 123 == ( true ) ( 123 , ( 123 . foo ) ) ) < - false . foo ;
 class foo { - foo ;
 } ;
 func foo ( foo int , foo int . int . int , foo int . int . int , foo int , foo int , foo int ) int . int . int { if 123 . foo / 123 { for val foo int = false . foo ;
 - ~ foo ;
 true ( ) *= - - 123 { if ! ! 123 { for var foo int = 123 ^ - ~ - - foo . foo == ! true ;
 ~ "bar" . foo ;
 - ( ~ ( "bar" ) ) **= - true { if - 123 [ ~ ! - 123 . foo ] { if ~ ~ ! foo ( ) { if "bar" == "bar" [ 123 [ ~ - true < ~ false ] ] | true { ( "bar" ) . foo ^ true / ( ! 123 ) -- ;
 } else { foo ;
 } ;
 } else { 123 ++ ;
 } ;
 } else { if ! "bar" { - ~ foo -- ;
 } else { 123 ;
 } ;
 } ;
 } ;
 } else { foo -= ~ true ;
 } ;
 } ;
 } else { - 123 ;
 } ;
 } ;
 var foo int . int . int = "bar" [ ~ ! ! - ~ ! true / ( foo ) + ! ( ~ false ) ] ;
 var foo int . int . int = "bar" <= true . foo ;
 class foo { if ! true { ( ~ foo ( false ^ - ~ 123 . foo , ( false ) . foo ) ) ;
 } else { if 123 { ! - ! "bar" ;
 } else { false == ! ! - ! foo -- ;
 } ;
 } ;
 } ;
 var foo int = false == 123 ;
 class foo { for val foo int . int . int = ~ false ;
 123 ;
 true **= ( "bar" ) + true { foo != true ( true , 123 ) ++ ;
 } ;
 } ;
 var foo int . int = 123 [ ! true | 123 ] ;
 var foo int . int . int = "bar" ;
 func foo ( foo int , foo int , foo int . int , foo int ) int { ! foo ( - ~ ~ true , - ~ - true ( ( foo ) & true [ "bar" ] > ( 123 . foo ) , - - "bar" * ( "bar" ) . foo ) ) ;
 } ;
 func foo ( ) int . int . int { if "bar" { - ! true ;
 } else { "bar" . foo ++ ;
 } ;
 } ;
 class foo { for var foo int . int . int = foo <= foo . foo ;
 true ;
 true == true *= ( ! false . foo ) == true { for var foo int . int . int = ! - ! - ! false ( ) ;
 ( 123 ( ) & ! foo ^ 123 / ( 123 ) == ! ( ! ~ ! true ) ) ( ) ^ - ~ - ~ foo >= ! true ;
 ~ ! true ( ) != ~ false ( ) > ! "bar" { ~ 123 *= ! true . foo * 123 != "bar" ;
 } ;
 } ;
 } ;
 var foo int = - - ( ~ false | - ~ ! 123 ( "bar" [ true < 123 ] - ( ~ - - 123 / ~ - ( - ! - "bar" ) . foo ) , ~ ~ - ! - "bar" ) ) ;
 class foo { - true != ~ foo ++ ;
 } ;
 
