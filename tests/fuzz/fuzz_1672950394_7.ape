module foo ;
 func foo ( foo int , foo int ) int { foo : = true or ! foo ;
 } ;
 func foo ( foo int , foo int . int ) int . int . int { } ;
 func foo ( foo int . int . int , foo int , foo int , foo int , foo int . int ) int . int . int { } ;
 foo : : foo >= false & ~ ! ! - true ;
 func foo ( ) int { - ! "bar" ;
 } ;
 foo : = 123 . foo == ! ! ! false ;
 func foo ( foo int ) int . int { foo : int . int = - ! - ! foo * true ;
 } ;
 class foo { } ;
 class foo { func foo ( foo int , foo int ) int { foo : = "bar" ;
 } ;
 foo int . int ;
 func foo ( ) int . int . int { foo : : - [ ] ;
 } ;
 foo int ;
 func foo ( foo int , foo int . int , foo int . int . int ) int { for foo : int : ~ ! ~ foo ;
 ! ! ~ true ;
 ( true ) and ! - false < - ! - false ++ { } ;
 } ;
 } ;
 foo : int . int . int : false and - - ~ false or ~ false ;
 class foo { } ;
 foo : : - ~ foo . foo == ~ 123 or ! ( true ( "bar" or [ ! ! - ( - true ) , ! [ ( foo ) [ - ! ! 123 ] ] ( ) != - ~ ~ ! [ - 123 , true , - "bar" , ~ - ~ [ ] == - ~ - true , true ( ) | ~ 123 ] , ! ~ ! ! - [ ] ] , [ ] + "bar" or ! ! [ ! ! true , false , ! true . foo % ~ foo << ( - 123 > foo [ "bar" ] ) , ! - ~ ! ~ ~ ~ ( ~ true and ! [ ] ) ] [ ~ ! ! "bar" ] > false and 123 < foo ( ) , - false . foo * true . foo , [ ] * ! [ ] , "bar" ) * true == ~ "bar" . foo ) [ ! foo ( ) ] ;
 class foo { func foo ( foo int , foo int , foo int , foo int ) int { if ~ ~ ! ~ ~ ! ~ "bar" { for foo : = ! ! - true or 123 ;
 - ( ~ ~ "bar" & foo ) and [ ] ;
 123 [ [ 123 , - ! [ ] , true , - - - foo or ! true >> true , ! ! true and - foo . foo , ~ true <= ! ~ ~ "bar" ] ] -- { foo : int : ~ true [ - 123 or - ~ - true >> [ ] ] ;
 } ;
 } else { } ;
 } ;
 foo int ;
 foo int ;
 foo int ;
 func foo ( foo int ) int { foo : int : [ ~ ! true , - - "bar" ^ - - ! - ! - 123 == ~ ! foo >> ~ ( [ ] >> - ~ true ) , [ true ( ( true << ~ ~ ~ foo ) . foo != false , ~ ! ( - ! - - [ true . foo ] ) - - foo and ! ~ ! foo , ! - false , true >> - [ ] | foo or ( true ) * ~ "bar" [ false ] ) , "bar" & ! ~ ( ~ "bar" >> - "bar" ) [ - ( true or [ false , ~ - ~ [ ] == false [ true ] , ( foo ) , ( - [ ~ [ ] , "bar" , - "bar" and - ! ( [ ~ ~ [ ] or - "bar" & ! true ] ^ ~ "bar" ) . foo == ~ ~ true , ! [ 123 ] , [ [ ( true != true ) [ - ~ true ] , ( ( - - "bar" >> true ) ) , ! foo , ( ~ ~ - - - 123 and [ ~ true , - ! [ ] ] or ! false ) ] or 123 ] and 123 , - "bar" and "bar" [ "bar" [ ( true and false >> "bar" ) - - "bar" ] or ~ true ] << ~ ! false or false ] ) and foo , ! foo ] [ true or "bar" . foo ] != [ - ~ foo . foo or ! ~ ( ! - 123 ^ ~ - ! ~ ! - ! ! ~ false or ~ ~ ~ - 123 ) , false ] ) ] and - 123 . foo <= true [ ~ - true * ! foo ] , ( ! ! ! false ) ( - ! - true , [ ] ( 123 or - true , false - [ ] . foo , 123 . foo and "bar" ( - foo , ~ ~ - - ~ [ ] , ~ [ ] != foo << "bar" , ~ - ! - foo , true , false ) | "bar" , "bar" , ~ foo and ! - ! true * [ foo . foo , ~ ! ! [ ] and - ! ~ ! "bar" , ~ false , [ ~ ~ 123 + 123 and ! 123 , true ] , ( ! - "bar" ) . foo ] ) | ! ~ "bar" , true , - ~ ! ~ "bar" , foo , ! "bar" and ! true | 123 > ! ~ foo [ ! ~ foo ] ) ] , foo , true ] ;
 } ;
 } ;
 foo : : - - "bar" ;
 class foo { } ;
 class foo { foo int ;
 foo int . int . int ;
 func foo ( ) int . int . int { } ;
 func foo ( foo int ) int { foo : = ! 123 ;
 } ;
 } ;
 foo : int = foo . foo ;
 foo : : true ;
 class foo { } ;
 foo : = ! true + - ~ 123 ( ~ [ ] ) ;
 foo : = ! ! - ~ true . foo == foo . foo / - - "bar" or ~ - ~ ! [ ] . foo ;
 func foo ( ) int { if true ( ) { } else { "bar" -- ;
 } ;
 } ;
 foo : : ~ [ - ( - true . foo ) , ! ~ ~ ( - 123 . foo ) or ~ ! ( 123 and - ~ [ ~ ~ false and "bar" or ! - - [ false or ~ 123 , - true . foo , 123 , ~ "bar" or "bar" ] ] ) . foo < false , - ! [ 123 > - ~ false . foo , ! 123 . foo ^ ( - ! - - true != false << ! ~ - ~ ( - ! ! ! foo ( ) ) ) ( true , 123 , ~ false ) , - - ! "bar" , ~ 123 , [ - foo and ~ false * - ~ false . foo , - 123 and foo , ~ ! ! ( ! foo ) , - ! ~ - false / false ] ] or true ( - true , "bar" ( ) , foo != ~ ~ false ) >> false | - ! true ( - ( 123 ) , "bar" & 123 . foo , 123 != 123 >= true ( ! ! - ! ! ~ ~ - ~ "bar" , foo ) << ( true ( true , 123 , ( ! ! ! ! - "bar" ) ( foo , ! ! foo and false , ~ - ! [ ] , true . foo , true >> - ~ ~ 123 ) , - true and - false [ [ ( - foo ( ~ [ ] , "bar" , ! "bar" , ~ ( ~ ~ true ) ) or foo <= ~ foo << ! - 123 and - true ) , ! "bar" . foo ] ] or ! foo . foo , ~ [ - true <= ~ true - ~ "bar" ( ) ] >> ! - - ! ! ! true , - ~ ! ( "bar" ) < ( ! foo ) ) != ~ ! [ foo | ! - - ~ 123 , - ( ( - ! - - ! "bar" ) ) , [ - 123 and "bar" , true , [ false , - ! true ( ! ! ! - ! foo . foo , ~ 123 | ( "bar" or true ( ) ) , 123 ) , - ~ ( [ ] ) [ ( [ ~ - false , "bar" , ! - - ! [ foo , [ ] and 123 , [ "bar" , true and foo , foo , 123 != "bar" ] , ! foo ( [ foo == foo , - ! ~ ~ ~ ~ ~ ! ( foo ) + - - ! ~ - ! - - ~ ! ~ "bar" and ! ~ - ( ~ true == false ) != [ ~ foo >= ~ - foo . foo or [ ] , "bar" [ [ ~ - ~ [ "bar" [ "bar" ] , 123 * - [ ] [ ~ false ] , ~ 123 , foo >> ~ false , ~ ! [ ] ] >> - "bar" >= foo , false ( ! [ - ~ ~ - "bar" , ! ~ "bar" and "bar" ^ ( "bar" and true ( ) ) , ( ! ~ ~ ~ - ~ - - foo ( - ! false , ! ~ ! foo , [ ] or ~ 123 , false >= ~ ! ! ~ ! ( [ ] ) ( ) , foo ( ! ~ true / ! true , ~ 123 * ~ ! ( ~ ! "bar" - [ ~ ( foo ( ) ) == ! - ! ~ ! ! ! - - ! ( ! false ) * [ ~ - 123 % false , foo [ - foo ] - 123 . foo and ! ! ! ! - [ - [ true == ( ~ "bar" . foo or [ ] > "bar" ) >> - ~ "bar" * "bar" or ~ foo [ false or ! 123 ] , false or foo . foo and ! true , - "bar" , [ - false . foo ] , - ~ ! - - - ! ( - - false [ [ ! ! "bar" . foo , foo , true and ( ! ( - ~ false ) ) , "bar" , [ ] ] or - - [ foo , "bar" or ( "bar" ( ) ) , ~ false , ~ foo ( ) ^ ! ! ( ! "bar" ) [ foo and ! ~ - ~ false ] , [ foo == "bar" , ~ 123 [ ~ [ ] <= ~ - - true == true or ~ false & ! ( ! 123 ) ] ] ] ] ) , [ ( - foo == ~ ! ( foo ) [ - - ! [ ~ true ] + "bar" or false ] ) | true or ! ~ ~ "bar" & 123 , "bar" , false , ~ true + [ - - - ~ ( - ( false ) [ foo >> ~ ! "bar" ] ) and foo << ~ ( ~ - foo and ~ ~ foo ) ] <= ( ~ 123 [ ! ! foo < 123 and false ] != - ( ( true ( ) ) >= ~ [ ] . foo & - [ ] ) and foo < ! true ) . foo , ! - foo / "bar" , true >= "bar" or ~ ! "bar" ] << - 123 ( false . foo % - - "bar" , false , ! ! ~ ~ 123 ( ~ 123 > ! ! ( ! false . foo or - - [ ] ) , foo , - 123 , [ - false >> [ ] != "bar" ] and ( false ) ) and ~ - foo , ( ~ false ( 123 , [ [ "bar" . foo | ! ~ ( ! false and false ) % foo ] % false , ( 123 ( ) ) == 123 , ! ~ ~ ! ~ false and ! true ] ) ) . foo , foo or - ~ ~ "bar" ^ ! ~ - ( ~ [ ] or - ! ( ~ false or ! ! [ ] ) [ - - - 123 ( false , 123 or ! foo , 123 ( ) or false ) >= - ~ ~ ! true . foo ] ) ) ] or true ] / foo , ~ ! ! [ - - 123 * - ( ! [ ] ^ ! true / ! - - ~ [ ~ [ ~ "bar" , foo , - - - false , ~ - ! - ! - ! false ] , ! [ ] , ( ~ "bar" ) , false , ( - ~ false ( ) ) [ false [ ! "bar" ] ] ] << ~ 123 and - false % - - ~ ~ ( ( foo ) and false * - true ) ) . foo ] ] [ false ( ~ ! ~ - ! ! ! ! ( ~ - ! "bar" ) , ( ! ~ - [ ! ! [ ] . foo <= ! ~ true ] >> false ) << foo - [ 123 . foo , - foo , ~ foo , ! ! ! "bar" ] ) ] , ! - [ [ ] , ! [ false , ~ foo , ! false [ - 123 ] , ~ ! - 123 <= ~ - "bar" . foo ] ] ^ ~ ~ "bar" , - ! ! ~ ~ false ( ) or - ( ~ true ) % "bar" ( ) == 123 ] or foo ) and ! "bar" or ( - false ) , ( false ) . foo <= ~ ~ [ ] or ! - ! ! ~ - foo , ( ! "bar" ) , [ ] ) >= false ( ! ~ true ) , [ ~ - true or foo ( ~ "bar" , 123 , "bar" , - [ foo , ( ~ - [ ] [ ~ 123 ] != ( false ) ^ ( "bar" or - [ ] ) ) - - - ! - ~ 123 . foo and true << true <= "bar" , - [ ] , foo ] >> foo [ [ ] ] , ~ "bar" , - ( - - ~ true ( ) != "bar" ) . foo ^ ( 123 <= - - ~ - ! - "bar" ) ) , ! 123 ( ) or ! false - - - "bar" % ! "bar" , ~ false , 123 ( false or foo ) <= ( foo . foo % foo + [ ] or true ) , true , - ! "bar" ] ^ foo or ! "bar" . foo ) ) and ~ false , - false ( ) | false != ( ( ! foo ) [ ~ ! ! - true != ! [ ! "bar" , [ ~ - - - "bar" , - "bar" , ~ [ ~ foo <= ! ~ ( ! ~ [ ] ) and [ true and ~ ! 123 , ( ! - false ) , foo and ( "bar" and "bar" ) . foo , false ( ~ - "bar" , ! false , false and ( ! foo ) , - [ ~ [ - ( ! 123 ) , "bar" , ~ - foo , - [ ( ~ ! true [ ! foo ] ) , "bar" ] and ! false , ! [ ~ false , ( 123 ) , false , ~ false , - ~ ~ ~ ! true ( ) ] and ~ - - ! - foo ( ) ] , ! ~ [ true [ false . foo ] and foo , ! false and ( false ) , - ( ( ~ foo [ - ~ [ - false and 123 , ! foo == ( [ ] + ! - false ) [ 123 ] >> ~ ~ ! - ( ( ~ - - true - ~ ~ ~ 123 . foo >= - "bar" or 123 ) << "bar" ) ] - ~ ! ~ "bar" . foo ] and [ ] ) ) ] , foo and ! - foo << - 123 , - [ ] != 123 , foo + ! true << - - - false ] ) , ! - true <= foo & true and [ - foo , [ foo , ! ! ~ ( ! true ) ] , - [ ] , - [ ] ] , ! ! - - ( foo ) ^ 123 ( ) >> false ] , - false , "bar" ] == - ~ 123 ] ] + - ~ ~ - false and false ] ) ( ) , true , - [ ! - ~ ! foo , "bar" and foo , "bar" , "bar" , false ( [ false , [ "bar" ( ) , ( [ ~ ~ 123 << foo > - ! ~ 123 and [ "bar" == ! ! - ~ true . foo or - ( true ^ ! false ( ) ) . foo == - - ~ ~ 123 [ true ] , ( "bar" << "bar" [ - 123 ] ) , false , ! ~ - foo , "bar" or ! - false [ ( ( ! - - foo ) ( - 123 , "bar" ) ) | foo or ~ [ ] ] ] , - - ~ - ! 123 and [ ] , - - ! false , ! - ! [ ( - true or - foo . foo ) , true != ~ - [ ] or ! ( ( ~ ! true and - [ ] ) ) , ( ~ - [ ] or ~ 123 ) and false . foo , ~ foo != - [ ! ~ - "bar" == "bar" | [ foo , - ! 123 , ~ true , foo , foo , false . foo or ( ( true < false ( ) ) * ( foo or 123 ) - [ ! ~ ( 123 . foo * "bar" ( ) ) ( ! - foo and ( ~ [ ] ) , false and ! "bar" , ~ foo ( ) , false , ! [ ] & ~ [ ] ) and ~ ~ - ( "bar" & foo ( ! foo , ! ~ ! "bar" & ~ - [ ] , false ) ) . foo , ( ~ foo ) ( ! ! true , ! ! ~ ~ ! ! ! ( - [ ] ) . foo <= ! ! ( 123 or ~ ( true ) * - false and - ~ ~ "bar" . foo ) and ! - "bar" , ( ! ~ ~ - [ ] ) == - false , ~ - true << [ ] . foo , ~ - - ! foo ) , - ~ ( [ true ] ( ) ) >> ! ( foo or true and foo ) and "bar" , - [ ] ] ) . foo ] , ( [ foo == [ ] , - ~ ! ~ "bar" ] . foo ) + foo <= ! ~ true , ~ true , false ] , 123 ] [ [ ] ] % ~ "bar" ] ) ] ( ) == - [ [ ] ] , ! ( false << ! 123 < - - [ ] ) ] , true and [ ] * ~ ! ( foo ) , - ~ ( - true > 123 or false ( ! ( foo ) >> false >= foo , foo == false / foo ^ true , - false , ~ ! "bar" >> false or false , [ ! ~ ~ - [ ] . foo , ! ~ - ! ( "bar" ) / 123 >= ! - ~ ~ ! "bar" , - ~ - ! 123 , ~ - false , - - - "bar" , false ] , ( false ) == ~ foo ) - foo ) , 123 ) >> - true , ~ - false and - - - - ! [ ] or ! - - "bar" ] and foo ] , ! [ ] or "bar" , ! - false , ( "bar" ) ( "bar" or foo ) , ! ! 123 . foo != - ~ ~ [ foo >> - - false , "bar" [ ~ ! foo | [ ] and ! ( ! "bar" ) ] | true , [ ] and - ~ "bar" + ~ false [ - - - false ( "bar" and [ ] << true - [ ! "bar" >= - [ ] or "bar" ( ) - - ~ ! ! - - true . foo ] ) ] , ~ true , ~ [ ~ foo , 123 ] << ~ ! - ( - 123 ) ] [ ~ ( 123 and true % - ! 123 << foo ( [ true , ~ ~ ~ ~ ~ [ ] != [ ] , ! foo - "bar" ( ) ] , ~ - true [ true [ ~ ~ 123 ( ) ] ] , ! true ( ) , ~ ( ! 123 ) , - ! false > ! ~ - "bar" ) ) ] , 123 ) , ~ 123 , [ ] , - [ ] ] and ! true ] , ! foo ] , ( [ foo , false ( - foo , - ( - ( foo ) != - - ! foo ) == ! "bar" , "bar" , 123 ) - ( 123 > - "bar" ) ( false , [ ] , ~ ~ - ~ - - 123 , [ true ] , ! ! - true , true and - [ ] [ ~ "bar" and "bar" ] ) > 123 [ ~ 123 ] , false , ! false , ! - "bar" ] and "bar" ) ] , false > ! ~ - ~ ( [ ] < ( ! - - ! false ) ) , false != false % ( "bar" or - true ) , true , ~ ~ foo or 123 and [ ] ) >= "bar" , [ ] << false ] ] ) ] and - ( "bar" ) , false * ~ false ( ) ] ] ] or "bar" ) ) , 123 or ! ( - ( - ~ ( [ ~ 123 ] . foo ) ) ) [ ! ~ "bar" or [ ] ] ] ;
 
