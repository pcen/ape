module foo ;
 class foo { foo int ;
 } ;
 func foo ( foo int . int . int , foo int , foo int , foo int ) int { var foo int . int = ~ "bar" [ - - ( ( ( - ! ~ ! ! ~ ! [ ] and - "bar" ) . foo ) ) and [ ] ( ! 123 | "bar" , [ ] , [ ] ( ) , ( ~ 123 > 123 ) , [ [ ] < "bar" , - ( ~ [ ] . foo > - 123 ) , true , false * foo != ( foo . foo ) , false , ( true ) ] >> ! ~ foo ( ) * foo , ! ( - - ~ - foo ) ) ] ;
 } ;
 var foo int = ~ - ! foo or - - ~ "bar" ;
 class foo { func foo ( ) int . int { } ;
 } ;
 func foo ( ) int { val foo int = [ 123 , true , ! ! ( - false & ( - false ) >= true ) , true ] ;
 } ;
 func foo ( foo int , foo int , foo int . int . int , foo int , foo int , foo int . int ) int . int . int { } ;
 var foo int = "bar" [ true ] ;
 class foo { func foo ( ) int { if [ - false ] { } else { var foo int = 123 [ ! 123 or true ] ;
 } ;
 } ;
 func foo ( foo int ) int { for var foo int = 123 ;
 ! "bar" >> ~ 123 ;
 - ! foo { } ;
 } ;
 func foo ( ) int { } ;
 } ;
 class foo { foo int ;
 foo int ;
 func foo ( ) int . int . int { } ;
 } ;
 class foo { func foo ( ) int { var foo int = true ;
 } ;
 foo int ;
 } ;
 class foo { foo int ;
 foo int . int ;
 func foo ( foo int , foo int , foo int , foo int , foo int , foo int ) int { } ;
 } ;
 func foo ( ) int . int . int { } ;
 class foo { } ;
 func foo ( foo int , foo int , foo int . int . int , foo int , foo int , foo int . int ) int { } ;
 var foo int = false != ! - - false [ ~ "bar" << false ] | ~ ~ ~ ~ [ ] ;
 val foo int = - ! - ~ ! - ~ ~ ! ~ - ( ~ - - - 123 ) ;
 var foo int . int . int = - ~ ! ~ ! ! true ;
 var foo int = [ 123 , - "bar" , foo ] ;
 val foo int . int = ! [ ] >> ( - - - "bar" ) ;
 val foo int = ! false ;
 class foo { } ;
 func foo ( foo int , foo int , foo int . int ) int { } ;
 class foo { } ;
 class foo { foo int . int ;
 } ;
 val foo int = ~ ! "bar" and true ;
 func foo ( ) int . int { val foo int = 123 ;
 } ;
 val foo int . int = ~ ! ! ! foo != foo ;
 class foo { func foo ( foo int , foo int , foo int ) int { val foo int . int . int = ( - - ~ - "bar" and foo ) ;
 } ;
 } ;
 class foo { foo int ;
 } ;
 val foo int . int . int = ( [ ] ) . foo ;
 func foo ( ) int { val foo int . int . int = ~ foo ;
 } ;
 func foo ( foo int , foo int . int ) int . int . int { } ;
 
