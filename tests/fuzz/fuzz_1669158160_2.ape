module foo ;
 val foo int = 123 + - - ! ! ! ~ ! true [ "bar" ( ) ] != ! "bar" ;
 var foo int = false & foo . foo ;
 val foo int = - ~ "bar" + foo [ ( false ) ] ;
 func foo ( foo int , foo int , foo int . int , foo int . int , foo int , foo int . int . int ) int . int { if - foo { ! - 123 / true . foo ;
 } else { for var foo int . int = true ( ~ ! false & ~ "bar" , - true ) != - - false [ ~ ! foo ] ;
 ! foo ;
 ! ( - foo [ - "bar" [ - "bar" ( ) ] ] ) /= true { for var foo int . int = true * ! ~ ( ( foo ( ) ) ) ;
 ~ ! ~ - false [ false . foo ] | false / - ~ true != - foo ;
 ! 123 * "bar" != ~ "bar" ++ { if - 123 * - - "bar" . foo - ! 123 { for var foo int = ~ true ;
 ! ~ foo ;
 - - "bar" [ ! ! 123 < false [ ! true ] ] /= foo { for var foo int . int . int = ~ foo ;
 ! ! true > ~ ! true . foo ;
 123 / foo **= "bar" >= ( ( ~ "bar" ) [ ! ! ! true ] ) { for var foo int . int = 123 ;
 ~ - "bar" ( ) ;
 true -= ~ ~ false . foo == ! ~ false [ true . foo ] { if ! 123 - ~ ( - true ) { for var foo int = - foo . foo * ! 123 ( ) ;
 123 ;
 ~ ~ ~ ! - ~ true & ! - foo -- { - foo >= "bar" ( ~ "bar" ( ! 123 , ( false ) ) , "bar" [ false ] ) ;
 } ;
 } else { if - 123 > - ! 123 - ~ foo * ~ "bar" { false / ( "bar" ) ;
 } else { for var foo int = ( foo ^ true ) ( ) + "bar" . foo ;
 true [ ( "bar" . foo / ~ ~ false ) ] ;
 - foo **= true { ~ 123 ;
 } ;
 } ;
 } ;
 } ;
 } ;
 } ;
 } else { - - ~ 123 [ "bar" ] *= ! true ;
 } ;
 } ;
 } ;
 } ;
 } ;
 func foo ( foo int . int . int , foo int , foo int , foo int ) int { ! - ! ( true >= ~ foo ) . foo /= "bar" > - foo [ ! ~ "bar" ] != ~ false ;
 } ;
 val foo int . int = false - - 123 ;
 func foo ( ) int . int { foo . foo / ( 123 == true ) . foo = - ( ~ ! 123 . foo ) != true ;
 } ;
 var foo int = ~ ! 123 & - ! - 123 . foo ;
 func foo ( foo int . int . int , foo int , foo int . int . int , foo int , foo int ) int . int { if ( 123 ) ( 123 , ( 123 ) ^ true ) + true { 123 -- ;
 } else { ! ! ! foo **= "bar" ;
 } ;
 } ;
 func foo ( foo int , foo int ) int { if "bar" { 123 **= ~ false - ~ ~ ! "bar" [ - ! ! - "bar" . foo ] & ! true . foo ;
 } else { 123 -- ;
 } ;
 } ;
 var foo int . int = ! foo ( ) + - false ( ! false - true , ( ( - "bar" != - foo ) ) + - ~ ! foo ) ;
 func foo ( foo int . int . int , foo int . int . int , foo int , foo int , foo int , foo int . int ) int { ~ - foo / ( true & true ) + foo ;
 } ;
 func foo ( ) int { ~ foo [ ! - "bar" ] & ~ ! ~ ~ - false . foo -- ;
 } ;
 func foo ( ) int { for val foo int = ! "bar" < false ;
 false ;
 - "bar" { if ! ! ~ foo [ ~ ! foo . foo ] { if foo { ~ - 123 ++ ;
 } else { for val foo int = ~ foo == ( "bar" [ - - true ] ) ;
 "bar" [ true ] ;
 foo = - foo { if false { for val foo int = 123 . foo / ( 123 . foo ) . foo ;
 ~ 123 ;
 foo / ~ ! ~ foo [ true ( false . foo / ! foo ( ) , ! ~ ! foo ) ] ++ { for var foo int = ~ "bar" ;
 "bar" ( ) ;
 "bar" { ~ ! ~ true *= 123 ;
 } ;
 } ;
 } else { "bar" == - ( ~ 123 ( 123 , 123 ) ) - ! foo ( ) -- ;
 } ;
 } ;
 } ;
 } else { for val foo int . int . int = ! - - ~ foo <= - "bar" ;
 ! ! foo ;
 - foo [ 123 ] -= true != ~ ~ true [ foo != - ! ! "bar" ] { 123 ( ) ;
 } ;
 } ;
 } ;
 } ;
 var foo int . int . int = true * ~ ! ~ ! true >= ! true ;
 var foo int = ! 123 <= true ;
 func foo ( ) int { 123 *= true ;
 } ;
 class foo { func foo ( ) int { for var foo int = - true ;
 - ! ! true & - 123 ;
 - true /= - ! ~ 123 . foo { if false == - ! foo { if "bar" { ~ false += foo ;
 } else { ( false >= false ) & false [ - foo ] >= 123 *= ! - foo [ 123 ] > - ~ false ;
 } ;
 } else { foo [ ~ ~ - true ] | ( ~ "bar" ) ( ! ! - "bar" , ( ( ~ ~ 123 ) ( 123 , foo ) ) ) -= ( 123 . foo ) - ~ "bar" ;
 } ;
 } ;
 } ;
 func foo ( foo int , foo int , foo int . int . int , foo int ) int { for var foo int = 123 + 123 != - ~ - false ;
 ! - - 123 ;
 ~ ! ! ! ( ! 123 ) ( ) { 123 ^ true [ 123 ] **= - false ( true , ~ 123 != foo ) ;
 } ;
 } ;
 foo int ;
 foo int ;
 func foo ( ) int . int . int { for var foo int = ~ ( false ) ( ) == false ;
 ~ false ;
 ( ! 123 != - foo ) { - false = ! 123 ;
 } ;
 } ;
 func foo ( ) int { "bar" ++ ;
 } ;
 } ;
 var foo int = - 123 [ ( false [ ( - ~ - false ( ( true [ ( ~ true ) >= - 123 ( foo != - foo [ 123 ] , ( - false >= true ) ) ] ) , ~ - - ( - ~ ! - false ) ) ) ] ) ( foo , ! - foo ) ] ;
 class foo { foo int ;
 } ;
 
