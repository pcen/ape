module foo ;
 func foo ( ) int . int { } ;
 func foo ( ) int { foo : int . int . int : - ! 123 ;
 } ;
 foo : int = [ true , true , - true and - [ ] , ~ ! ~ ! ! foo <= - ( - - - [ ] ) , ~ ! 123 , [ ! foo . foo or ~ ( false ) , ! ! - ! - 123 [ foo | 123 ] , ! ~ ! ! [ 123 , - ~ "bar" + foo ( ! true ) & ~ false [ ! "bar" ] , ! ( ~ - - - "bar" ) - ! ! ( - ! 123 ) and true , foo . foo , ~ ( - [ ] or 123 and ( ~ ( ~ [ ] ) ) ) == ! true ] , 123 and true or - ! ~ - - [ ! ( true >> "bar" ) , ~ - "bar" and ! ~ "bar" >> foo ( ) , ! 123 - false ] != ~ ( - ~ ! foo ( ! [ ] ) ) ( ) >> - true ( ) ] & [ foo ] ] ;
 class foo { foo int ;
 } ;
 class foo { func foo ( ) int { } ;
 func foo ( ) int . int . int { for foo : int = - foo . foo << "bar" . foo ;
 - ~ - 123 % [ [ "bar" ( ! ( ! [ ] . foo or - false ) , false or true << foo ) , ( true << ! ~ ~ - ! foo * [ ~ 123 or "bar" , foo , ! "bar" , ! - ( ~ - [ ! - ~ "bar" , false . foo * 123 [ ~ ! ( - - ~ ~ 123 and ! ! ~ foo ) ] << [ - [ ] ( ( "bar" << foo and [ ] . foo ) % 123 [ ~ ( 123 [ ~ - foo ] and - 123 [ "bar" [ false > ~ false - - ! 123 ] ] >> [ ] . foo or ~ "bar" ) ] << ! - false , - "bar" , - ~ - 123 > foo ) and true < ! - - 123 . foo , - "bar" , ! [ ] and ! ~ ! foo , false [ ~ ! true and "bar" ] , [ ! true ( ) , ~ ( ! - ! true ) , false , - ! ! ~ ~ ~ ! 123 and "bar" , ! ~ "bar" << ~ "bar" ( ) ] [ ! [ "bar" , true , ~ ~ ! - false ] >> ( ! - 123 . foo ) . foo % ~ 123 ] , ~ - true [ [ foo and ! ( ~ true ) ( false [ [ ] ] , - ! ! false . foo , false , - - ~ [ - true , true ( ) , ! - ~ ! 123 and ! false , ~ ~ 123 or [ ] [ ! foo ] , [ ] ] ( foo , ! - - ( "bar" [ ! [ [ ] <= - - ~ foo + foo . foo , 123 ( "bar" , [ ] , - "bar" ( ) , ! ~ ! - ~ 123 , - ~ [ ] ) , ~ [ ] and true , ! ! ~ ( true . foo == ! ~ ! [ ] or - foo . foo ) [ - ~ ( ~ ( ~ "bar" ) ( ) ) ] ] ] ) , ! foo , true , ! ~ foo ) , foo , false ) , ! ~ ~ - ! [ ] and [ ] , [ [ - "bar" << ( [ 123 , ~ 123 and 123 , "bar" or ~ "bar" [ ( foo or 123 ) ( ( ! - ( ( foo ( ~ - ~ - 123 ( ) , false and ( 123 + ~ ~ true ) != true ) != foo ) ( - "bar" , ~ ~ ( ( ! ! ~ foo or ( true ) != foo [ 123 << ~ 123 ] <= true ( ) ) ) and ~ "bar" , - false and ( false ) , ! "bar" , ! "bar" <= 123 , true . foo ) ) ) , ! - ( [ ] ) , ~ ~ - - ! ~ "bar" , - ! ~ ! ! "bar" , [ ~ ! ~ foo , ! ~ false , ~ ~ ~ - ( 123 ) , 123 ( "bar" == ! false and ( - foo ) >> - ! ( [ ] and ~ 123 ( ~ "bar" , ~ [ ] [ foo ] , true . foo , ~ - - ! foo and true ) ) or false ( ) >> ( - ! ( ! 123 ) ) ( ) | ! true , true > false ^ ~ - ~ ! ~ ~ "bar" , "bar" , ~ [ ] ) , "bar" ] ) != - ( 123 and "bar" or [ ~ foo , ( [ ! - - ! [ ! 123 , - ! ! ~ foo . foo , ( false ) [ true [ - ~ ! "bar" ] ] , [ ] , false , - ~ - - false ] << - ( ~ - ! 123 ) , ~ "bar" and ! ~ ! "bar" , ~ - - [ - false , - "bar" ] , ! true or - "bar" , - 123 , - "bar" ] ) , [ true ] <= "bar" ] . foo ) ] and ~ ~ "bar" [ - ~ false ( ) ] , - ~ ( true ) , false ] ) , true ( ) ] ] ] ] or "bar" . foo ] or 123 . foo , - ( - - "bar" ) != false , - ~ "bar" , ! ! ! ! ~ [ [ ~ "bar" , ~ - "bar" [ - - false | foo ] , foo or [ 123 ] , ~ false ] [ 123 ] != - ! [ ] , ~ false . foo , false ( ) and "bar" ( 123 , ~ [ ] , ! 123 ( ) ^ ! - ~ true << ! [ false ( 123 , ~ ~ foo % "bar" , - ! ! false , "bar" and ! ~ false , - ~ foo , ~ 123 ) , [ ] ] , ( [ ] [ - true ] ) , true ( ! ! ! - [ ] , - true , ~ "bar" , true ) ) or ! ( ~ - - ! true != ~ "bar" ( true , ! - ~ - ! "bar" & - foo < false , - foo , ! foo , ~ 123 [ ~ 123 >= false == false ] ) << foo ) , "bar" or foo . foo , ~ "bar" [ true ] < false ] ] . foo ) >> - ~ - "bar" [ true and false ] >= ! foo | ! foo , foo != true << - ! false , 123 == - ! ~ ! 123 ] ( - [ ] . foo == [ ] or ! ( foo . foo != - "bar" [ "bar" and ! - false >> ! true != "bar" ] < - "bar" . foo << false or false & - - - "bar" . foo ) , true , [ - - foo [ 123 ] | ~ 123 , ! [ "bar" or ! "bar" , false , ! ( ~ - foo < ! ~ false % - true ) , ! ~ ! 123 . foo or ! false - "bar" ] , ( true ) , ! true & - 123 ] , - true , ! "bar" ) ) + 123 << true , foo [ [ ] ] , - 123 , foo ] , 123 , ! 123 ] ;
 - "bar" { foo : : - ! - "bar" == - ~ ! ! ! ( ~ false ) < [ ] ;
 } ;
 } ;
 } ;
 class foo { func foo ( foo int , foo int . int , foo int ) int . int . int { } ;
 func foo ( ) int . int { for foo : int = - [ ~ ~ foo or ! ! ~ [ ! ~ ~ foo , - ~ ~ ! ~ true ( ) , ! ! ( "bar" == true . foo + false ) << ! 123 ] == false , - ~ false > ! ! ! - "bar" . foo ^ ( "bar" == [ ! ~ ~ true ] ) [ 123 ] or ! [ ] , foo ] and true [ - ! true ] - ~ true . foo ;
 foo . foo ;
 "bar" and ~ 123 -- { } ;
 } ;
 func foo ( foo int ) int { if 123 { foo : : ! foo and 123 ;
 } else { } ;
 } ;
 func foo ( foo int . int . int , foo int ) int { if ~ ! ! [ ! foo , ( ~ ~ - [ ] ( ) or [ ] ( [ ! false , true , ( ~ ! foo ) , "bar" , false ] and ~ ! ~ ( 123 ) , foo != true ( ! ( - - 123 ) != ~ ! - "bar" ( ! true , - ! [ ! ! "bar" ( ) ] , 123 >> - - ~ ! ~ ~ [ ] ) ^ ~ ! ( false or ( true [ ~ - "bar" ( ) ] ) [ ! ~ [ ] and - - 123 / false ] >> 123 ( ) and ~ ! [ ] != false ) . foo , ~ 123 ( ) - ( - ~ [ ] or - - - ! ~ ( ! [ ] ) . foo ) ( ) , ~ true ) & ( ! ~ "bar" ) and ~ - ( ! - ~ ! false ) % ~ - ~ - false | ! ~ ! ~ true , - - 123 / foo and ~ foo , true ) ^ ( ~ - ( ! false ) ) and ~ [ - ( ! 123 . foo or true << - - foo ) , ! true [ - true ] , ! ! foo , false , ( true ) != false % "bar" [ - - "bar" ] , true or "bar" <= - ! ! ~ - ! true + ! ! true ] ) or [ ~ ( ! true ) , ! "bar" , "bar" or true % - 123 , "bar" ] and - - foo . foo , - ! - ~ ! false & [ ] , ! - - - ~ 123 ] % 123 ( ) { for foo : = ~ true [ ! true . foo == ! ~ - ~ ! ~ true ] << "bar" ;
 ! false != ( [ ] != ( ! ~ 123 ) ) ;
 ! ~ ~ ~ false == 123 ++ { } ;
 } else { } ;
 } ;
 } ;
 class foo { foo int ;
 func foo ( foo int . int . int , foo int . int ) int { for foo : = ! "bar" ;
 ~ ! false ;
 ( "bar" & - ( - ! ! "bar" and ! [ ] ( ) ) and ! ! - foo [ ( true . foo or ~ foo ) ] ) >> true **= - ! ! - - ! [ - foo ] / ~ ( [ ! ! ~ ! - - 123 , ( ! ~ ! - false ) and ! ~ "bar" , ! [ ] ( "bar" , ! 123 and ! - ! ~ [ ] [ ! - ( ~ ~ - "bar" ) . foo ] , 123 , - foo ^ true [ false ] , [ true >> - ! - - foo , ~ false and ! [ ] ] ( - ( - ! false [ foo ( ) ] ) , 123 , ~ - - ~ ! "bar" , - false , ! ( foo ) , - ( - foo ) ) and - false ) , ~ ~ ~ false ( ) , - true ] ) { foo : : ~ ~ ! ! ~ ! 123 ;
 } ;
 } ;
 foo int ;
 func foo ( foo int , foo int ) int { 123 -- ;
 } ;
 } ;
 foo : : ! - ! 123 ;
 class foo { func foo ( foo int . int . int , foo int , foo int , foo int , foo int ) int . int . int { foo : = ( foo != ! [ ] << ~ ~ - "bar" ) ( ! [ ] , ~ foo ( ) > "bar" and "bar" , ! ( true ) , ! true > foo , false ( ~ false & 123 , ( foo and ! "bar" ) , - ! foo != ! ! [ ] ( ) , ( ~ ~ 123 or ~ - foo ) and - true [ ~ ! ~ foo ^ ~ - ~ ! foo ] >= "bar" ) , true . foo ) and true ;
 } ;
 } ;
 class foo { foo int ;
 func foo ( foo int , foo int , foo int . int . int , foo int , foo int ) int . int . int { } ;
 foo int . int . int ;
 func foo ( foo int , foo int , foo int , foo int , foo int , foo int ) int . int { foo : int . int : ~ ( ! false ) [ ! false == ~ true ] ;
 } ;
 foo int ;
 } ;
 foo : int = 123 and ! "bar" ;
 foo : = 123 ;
 func foo ( foo int , foo int . int . int , foo int , foo int , foo int ) int { } ;
 class foo { foo int ;
 func foo ( foo int , foo int . int ) int { if ! foo ( ) > [ ] + foo { foo : int : 123 ;
 } else { } ;
 } ;
 foo int . int . int ;
 foo int . int ;
 } ;
 foo : = ! 123 ;
 foo : int . int = foo ;
 
