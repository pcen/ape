func nestedFoo(rev_type Sting){
   return rev_type
}

func foo(rev_type String) int {
    println("--------------------------------------------")
    println("Enter FOO with rev_type " + rev_type)
    println("Set X to 1")
    x := 1

    skip {
        println("In Skip: Set X to 9")
        x = 3
        skip {
            println("In Inner Skip:")
            x++
            x =  x + 3

            reverse nestedFoo(rev_type)
        } seize ("a") {
            println("In Inner Seize a")
        } seize ("b") {
            println("In Inner Seize b")
            x = 4
            reverse nestedFoo("b")
        }

        println("Continuing in skip")
        x++

    } seize "a" {
        println("IN SEIZE A")
    } seize "b" {
        println("IN SEIZE B")
        x ++
    } seize "c" {
        x = 0
        println("IN SEIZE C")
    }

    println("Exiting Foo with Value: ")
    println(x)

    return x
}

func main() int {
    sum :=  foo("a")*100 +  foo("b")*10 +  foo("c")

    println("The sum is: ")

	return sum
}